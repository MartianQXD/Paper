%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 979.000000 105.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 979 105
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 979 105
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /Q put
dup 34 /u put
dup 35 /a put
dup 36 /n put
dup 37 /t put
dup 38 /m put
dup 39 /space put
dup 40 /P put
dup 41 /r put
dup 42 /o put
dup 43 /g put
dup 44 /q put
dup 45 /C put
dup 46 /S put
dup 47 /A put
dup 48 /T put
dup 49 /p put
dup 50 /L put
dup 51 /s put
dup 52 /e put
dup 53 /B put
dup 54 /i put
dup 55 /l put
dup 56 /h put
dup 57 /c put
dup 58 /k put
dup 59 /M put
dup 60 /d put
dup 61 /fi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/C 4 def
/L 5 def
/M 6 def
/P 7 def
/Q 8 def
/S 9 def
/T 10 def
/a 11 def
/c 12 def
/d 13 def
/e 14 def
/g 15 def
/h 16 def
/i 17 def
/k 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/p 23 def
/q 24 def
/r 25 def
/s 26 def
/t 27 def
/u 28 def
/fi 29 def
/uni2B91 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec


CD90628DE99CFF176EB0642B426977B33B2221E1E1666C04A3E0889B91403CDC617C0A21630022D44E124DA6A26E0487C9EA35D0032F24917EABC6A0345BB37EB0886163D54159B580965D665932A8F8154C88FFFFCA87761D9703A0D83BAA11ED814AE43D1D2FE5FF27622AC1790AEC93C6BB596A08FA01C6F54EC4C87B17E99B3308A733FFEED8B6C2D9F0993D11444154A547AB6938048CD7CBFEF71263B148F0D5C8CEF9D1F754AD8C8BFF3A606EE9E25AB02B177C88226267E2CF5318DA6B2C0CE753CC28BB49B6E806ACB71E55018A92A306FD33E65CE3E8D1D1D9678F9A7460D2C11E01343E955DB3873554BAD15ED6D1BF9EE626C25E316C590FB735A8B3CDEA6E11CAB831ECCDD19AE754570278655881ADC235918DA6A6875CBDDFF3514102075F37057FB93D9422C644BDC610A8857BDC65FBBF72A26DB49EFD00F9824CCEAC2C8CE8BB386509985084E02D3F7F8976CE8782DB8687B0470F345C725F62041AFE581CAA346CA9723856F8121663976DDB1A684074995A6EF75D9FCB73357BF6C9EB3CE0A73F2B92B9E4112426F15DB8C95BC6614585BEB8AFD1465274C9B63EBAEF8FE416935BC6328B302E1E82CEA2D75A6219D9463C398A44E72667187A7D55F85BC4C06A7CAD3362B004CC6FEA1B6EE41CD34B5BD644F11B447ADD3698E9258CBC07B0B0B52143C41E4988BA8E3502C332F09F0205255F5FB8D0A1A090C52C43C06F70E567CCE3AEFB70D0DCB8158C9C54377B9A20F94C72A694A9569AC7B8AC0C32346CABDF0B441D3A0C51731D7DE191E84951CA3DC6861B0CDBCC53CC436E148F87E15F01A999D683A5B4DA8A28EA4FC7063710C7F5BBA246D50633B897B7A8CFFA3B28BA51DE683CEEA0858C5253715806C2FE111F24CD96B6903061EF3412C22EE611367DE26767A571066EA8663B351A854B73A7BE7DFD4FDAAC73232A7BF747DF08C205AA99FBE7BC7D8C642016476F8B2C630F2CAAA5091055CBE6CBE83F81C387D18D08B7F901F14B664466A4C9CE36DD140AF89C811254A800527615CDEA23F3D3A88F5137B9E0E7606BBCD4BC9BF5CF736CEE27DAFF7CE26B0157624B066522A644CBA84BD87E411D4F224E741BEF2AF6B284A9E31B30DBA0E187D88839A996949914CF669C134458B9E9AC467951B3A805FAF40E1685AF54BA73EED908B89AA6C9F276B01EA3778FFB8B7DF69C9B0BF2B07D289E71203D8AFF13023DABE61D33523C59A75A0A1577BC11FB7B7DBDE3738E0B171FE790521A33EC83569CA349E54B0C9BAC8295FCBFFD9144A4EDCD8ED423D061EA276914F3D31863DD29C9FFC3923EFC81A88B8BC17FA851A2D8A0DD6C634BBD2A705B89233A00F5CBE6D18BAFD8A7F4A0A0CA4E7D392DE321FF9A9B62EB9A99F82063E282BCC1EBF40E7FE4AD31E6757FFF6CC94771B6ADCCDBACCDD824D65F
6D5CCE2B23B6967375B4DC63F797484E14459B341572FF4A309E7F9B35D08E05484BD3248A4659A1A04779D832018F8ABD717FBA523C8A69EE6F4D734A82D779EA5B8CE1A91C5A5492967021150F34332F160D4605610B0B57EFF8F80AB70AEFEF7C2A3054CCB7E7CA8F5C1E869370CFD51E70BF393F738E85FC1C050EA8C5693E3F1F66CAF423D6A7A25CB346AA0F1E39DE772FB0647287C95AB4FC9886460A633012B194B0EF99C77A04BFBAAD49953344102405DD229B6189A0B2B6931148CC5737FFB68DCB25A39B88E6DAFE6C4145A1EDD826204C2561DD9AD43291E8774E489AE12916A465B2B29E05C31E592F1F842E7BB6BBC612B010C359E587F89F7E390ACE905D243D39C797C5B08E552B421160AA13ED04381586DB7146284109A190A03F4BC8E33BAE3C2C1410F1D3B65F3CBF0034BC35BB08F38B937BAC9E3533F3EC525980448579FD821301A13E7AA4F70B463B3C41A45B16CAC93549F40F62295839EE1B99B86692B7AE276EAD557C76964BA53994C97D6E538320BE09FAFC73DB3E3D854461AEAB4C440465A4F348F49C89ED6C1A7C41711E99F07534A61A3D55EF25977159D2718CEACA0FF6FC8B01E0D5ABC32D106248B86E84B2D2F3B211822CACC8F86A017BD077D38A3EE0B3B8B751A45774D03C9039F4F51C0328B090888156C03A7A43A5CE52120B3572B904D6EFD4164F326D7736A1F41FCC576D09866D34EF4D8441315486F9A947707AFB0BC181B3EB7DEAFF5D28D2C7BD4CF417B4A9B34148CB6DA510F59FD2B77756D65C02AA3D67C74FDDE3C53187AAE38E896ECF08C7AF74B9A1FBE6C851F1D5BF2D2B0975300B51A95734C8359AEF6A52CEF56614E230DB0565A2307A6365CFB5C0E4E1946248374251B2977E2A15ED23C874B831C6B9A96686C4646C065E3EDD33B403637D88E87A4859BB6856A8A064F9E051E843695D493ED74EDB365A8B4275533B87A255042E3265015B7F22946D8EA7F2AFCF6EB37E02775A3257520CCA23E5069820C69C094CF460CBE2956ED2A71BEFEEADD990D1E31CC0BA61649091FFA8D7D3E4F3D9EDF5B5EFBD5C20EEBD076CAAA7C019FE989A2D7DC7AC65ECB185BB119DCD20F13A8484D76D875A2349EFF4FD8541542030D29D6ECBEEC37039F7EEF5B391E6A4DE85F16442D97811A9489AD0B2847B6E5B0498F24A5F6E99E4C5C39F986CAFB4A439D47128C6398F06F58BD1E7706188D16595E640BBADBA34075D2304EC270355EDABEF2703F865B86119B5D66AD4F77B816B70FA4646CAB8065FBBD222810D887819D5CB6C77CD1A4EB57434FBB3F0A4723DACBF2E8219250368D52270225E1406C8B5CBEB761996753F874F8A474701308F5A7DB3126522E25A817AFC9C650CAF306DD338EBF9F948C8EFFD3DAFE475397172C08920AC0FE9D642A5C44CB94A25A38AFCA6D7DB
F8E4D587D5045D4E90400BB6A1E2127332787D69CC07B421FF09320DE7DC0946DB9B14A91BDCEC9DFA6916AE6C97F007F205E024413FBB1AC9A75A4A0980CC48862DE0BD589E837D856999EBA2D7B26463D825340B6BF5E60F2348A381261D258D8B943940DF37E7DE0ECCD70DC17BB8238EBB1EA939209C6CB9E66B78D52A2A343087158AEDAAEE836DD9B60FD12ED1ED3AE093B9585697793EA93643F1ADCB26088C082E84ED0F112FC57C94C279B55BE98572D6C862DC8002D975B3A5D37F9A065A29AEE25E01F3871D118D7738887CA8B0DA877A8CD1F2F16EC23C1606D82A851DC2886BF1D512C12F4C9017BF280BAB06B56300997E939E8497848A180DA8FA6F7375618A6EF1F11984EEF46A9767AB632C081778E295D9CCDCCC16BAADC654E0581A01B43F42F5322A89CC1CFE12DCA380C7E5E8DAE10C2618B7353981831804D6FEE20710B4015870588031E3F53A351DD3A2FBB1CA29739D82DBB5FEDAB382670837FFF72081F812059BE89735E9925470EFCB587F04AB50FB03E0BAB6B3F5A9DF242ABE82545BCF2AADE688C0255A2E76EBD7249F4518168755CC4EFCE60143DF0B74FEC0A13CFC3E4176996085897962E9E9D6B876A4390377FA7E43CAE481F7634B19DE6AFFB6994A06788D747F6309D5432F0532E0A47CDB16582740D4FCC2AE066003694BD765A09ED07A9A82BE429DABF7E8AC0E24E43933336E860988E87FC471F5C5AE7A009DA44F1FAB958144F27B74C6AC5C2F671D9CA6BD025ACEC54727A6A855502A0F7F27D76D36C2812EAEE6C1D51CF2DB685846B8496E2778C86673143F725C95A45160AFE4CC42E32AC1E8CC2C72CEED5EBE33F5A084C8A51625743FEDF574927597FC77C89BDF72894F47EFA797391F59170868123306F88AF9B4F8651CB081EE90D1350C7FB6F0827C5082EA87BC13A59E5F50A28B571432065942ED6AFFCA65639DDAB3A0B0D2C8991E7D96FD4B0835306033F686AE5F5D732D9E608A4DDD2DEB03754C71A6502211A762D0B49BB63ACED7B23C9FBB4B740B0D7A329AAAB09C884A12177F05F524CCF8F22629AC14CC89E068FC59936053DAB8FB523B23738069B52889CEF9D7F55E80F47FE3D4ECA4FDF0CDC0E578DA2544AB28A1C523C6A81B64D3ACBBEAC9E7A8B003251528D889148F174193F8421D9B8413888A02537C2992F56E4B01C787684F1BD64E6121B6F896AF8D7DA401C50238CE2EF13553344A3C08B8BBF1D625BFE3B19A5383AE6668F0272806B5F93EDFBB0549788C7B95326FDF7E0A664FD0868696A54A7D640A6B70869191A0AD38EC8A1D3767454CBF693143493389C120A78D0BA172FD774E84DC814E3B1E829362A8BD1F15082AB3BF2326672CABD2FB5FD44F49CA3020A513515CC1AA007FF7B62BD9B63A4C233350FAF2ED80A9179170CCF8743F5DADABEAD92D
A12FB5F316FA7A40F919DB647ADB62F8C9DCDCB24EE8E7526194FE7322B5DBC9BD3A8AA7AB4CC7773B78156EC7D6EF6BE770B5A211DB157C055EA4648EA63998B15D85E7C550A6CC12C08FB2078433B02E91594001DF6DC144304A51F25393050227482E01BC459A58BD94259CCEA59A4EB75BEF810D816B7C6951F13713FF8B7D99975969A7447CA039820519E39329B5081D190FF57E0F3461CBD70B48A7FA17203B31D9C2F00B58AE8B56AADF84C43671CCD210D7B26EFEAF2EEFA40A2347C181490D5C02D30CD67FD61969A15487A7EC6AC4D304FD52DF7FF8E9B3DD1AA653D9632C93F3B60CBC455541AD44AA58AB640C491A0897305EB687BF8BB2070A9731BBA4A663F282FD478F452B50DEE1D77CC2D46A7491C03ACCCFDB8290389120275EE0FA2B74A98E886BA84DCC37F95751669E86B656B3F27A6E87336672A3168CD4C25BB922992E7F43A30D66C9535B695F8872DD933AB83E97F8EF5ECD47749D3296FEBBD99C1F11EE1257859B3FB2239645840E53FF67E96BAF36DDFF14284CA292C4CBA07D15F553F7F5D4E6A2F0A809153ED41E3D21B5EB70E3F1A40DA69B9E28179A8F3B9E79D03692CE36E9E1D09B4710585636B82C363710527AA494DAE786EB2F9C15F25AFB4C14A2B5C518B81AFD69D5C96E63FC7781F815748635EC92F5948AB445A6E861F8F1F8561244FAAE617763B64EB3491BA6B755DAC55953BDE6E721583CD63EBDF09D9C05CFACA9859186A19B8813D1BD6B0A16E273276FDE6BFAE2D582657863691A3B68163FE55A50FD377B0E9264ABBB65C56CB6AAE895E08116C0566486CA55676DF49035329589EB70D50B80FA8C263DD3DC4E0F2D8ED100AD92030FC6A6C78789C2A9CE91F1B4081AFD3C7F7801BDE2FBB0C2D3923ECDD2AC81F04FBF4CEE4451C5561AD7751219C19C5C77FBFB64B2AE385D5429F391FCDFEA4CE8E15D7579EE50E2DAFB64B9D64A186F481DB45D3F6CB0873770EFC0A29CEB48EF34B489CECF4E1CB78FDB76DEDCEE81D469AD30916FCD5A843C60CB507506BD9E3E06B5287B7CEC9765
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 4/14/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid3 putdup 2 /gid68 putdup 3 /gid71 putdup 4 /gid72 putdup 5 /gid73 putdup 6 /gid76 putdup 7 /gid80 putdup 8 /gid81 putdup 9 /gid82 putdup 10 /gid83 putdup 11 /gid85 putdup 12 /gid87 putdup 13 /gid1153 putdup 14 /gid1154 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6E422A5CF7CE5E880A3068D81000433612B2FD76F7FB1EBCF1AE84A9553FE14839A36489BE979EDC48166D9A26F018947E2F504C746D801C6BE0CCFF2C367B74F5E06F50963DBCB921962B43BFA2363CA74F2708F8E8814B3F3F1B2712FAF8313512B6159762F2A89E84964B2BE8BE0043A0561FF545E0060AC895081193CA7D5EC33F6C7950DDB91C3CA63EB1634150B53AF127DF186ABD3ACDBABA220E85EC2F466CA498BF98B6ACD6F0D3DDB60F98A79232582BCEC34CB72A0E03A131AC1D9697BD37D537992153638E2EB06A0FEBBF5B225FE9F8DEB00CD4CCB644A25FB8DBD2D269E5D026F6FFC34264DBA6C6E9F95E9E0AC61B3209BBE72C9735201650F5028601AEFDE3654FF0F4E35DF0F0BE76C6C5E161FC386A77E13D67D825D73AF40588675EF2B1C1878FD6EDFBE642A5B0FEA0D1CB47311F261510FB10DE780EE6B199CFEBEEF26D547E66CE7046E5BF2CF73A285DD6582ED8C74D84F5882F764CC41DA9265488B2FDBB2055EB098E87FB059CB54B3A3B4298C37CD2A04408E7AC2A97A9B7A8FE8A146AD4879C647C969D3FC7AA25C9412624C13003D11A560ADF5AF2F798C43AE03CEE096635427A925FFBD491ADE17CA32C8DA3FBA7A2ED17B9ACA260CA6181E0850F7B94A2561C4234A3DF6093338A23199240570DE9399AB51EFA19881C2AF47F9CB4FE4FFA0148C9912A4603A650001E9E8E07F3FDA1F09CC0EB93533D79DB921FB21D79EFFFFDF143D04A14966FC5AAD034836CD6A763C04A81DA1CD80E754457D59439B1C4FAB7609815BC08D7202DC870AAB594E92B316AC8BB56FF0A0F9B3C5943C7882C8430F9530AC96BBF5997223BDF4A685687B4C611339F4389468F20DDF212CCB9EBC3E84423E1529B1988839CBA50561624B3067D11E048200608F5334778376F0E9F6098C3A02F92DA9A448E439B6F8CF0BF17E20CB81A2C56370383A77BDC82ADA7B1DD6173891328408A25878386C8FE99260D8C6C47701339F7F2FA79215F6939E608CDBF8457D92A86CF2283B0D7987DB74BFC54DF0DCCF1D1AF66147B6DDB99CF88870C62625FA7B999F464E32B4A2FB9B60DBF7569FC359D1EAEECD93B40B15E945F0D1E677AF88B00FA9C9E7CBAA3C4D5DDB35703D3D46239D184AC6F753CBB89882691E64176EC76EEEBBEAAA09D1B980B4939FB649F68366CECA09BCEEDBA7C2007D76C41D82AE484409E461AA1890540BFF43FD1A64DF628A66BF5268C9C1B28FD0E0E983DA2AAFE4BCF6329278CE21147F45FF3C30373E39ACCB287352EB5B8DDE5C860FE34A5F7FC3933D7A0C9BCDFD8399C0297239DB3C1D1AF30DEE671A3A330B017E8E3D304FB8A952E11A664E2228A47B2DF76FB1DB3926AE21F80CE79EF6B3706704330599BFCF0C288E0E09ED407F54C0A722F0CFA08596967DA3A9AF820D001B18747C619F344E2AEC6FE5497AD48A99FAE2898B494E54F3945671437F2F62800A678DAD48EC2687736AA57C41033CE680659EE3DC5011928549986CC6AE500562AB14242A124A93995048C4E12E30130C05E874C21A917445E4E13E08F86DDED69060F9EDB7AF767053E9DA40F9AC28F6AF7F1E04373EC8DEA1187A8F62340D217E502E6115A55344DD36A65BF14A8E2EE1E7E501C1A4A2DC26BB90B90196B38CE44881BC3306EB69C722B58A2C5615242A4FADB54DCB7E30F9526F56581A2C133CE0931F03CCD3DC5FC026972B550436EB8D86B3A6BB0E64AB87094B0C5C5FB81AB60EC9F1ED841DB9117C46433FDEF5F615026AA530E20AF5DB122FDCF36307993FD7E5DA42675F2EAAF96E920F7E0B693CC2F1C6D7EFC779BBBEE7C278F19A3EE254D4220862366A609FA1BB4205B421E9904AFCB278FB21D3909250381696EF7FCAFD9D9FA11519B34EBDEAE5E0E5C03594F68BC4A5FEC71FAD2E1B762469F05C06A0FF09EB4364316737E235240090327E7C40FB1DE8BB7F6FB9D5877306E703864BD6BAC0641A892B33BAA1560B6E30A57B1E6BB828A628FE61B0EAE264228A7ECB40C0AB7FF58FA433E0D95706013309AFAD72C8FC51837545DF0FEC5619FD9A3747A96CF8320B76FC8B658F2411C03267C4BA82A565B0B5835F488964B6558E11D28378AFABC84DFA98800C31CEA9AF8AA32159734B108DF6229D23B30D477B638AA487C331745A63407002ADC5895B80961462244777382277820D2583AC9F0DED1D80F99DB7A9915CB8B9E5352E4FA248E53C6D6CEE75ABDF5E952AC5A139AC1218A0558D9EA305C71530FD917BAA5ADFF5709F53908851F66BF43E39637A859F955ED54F8F9A3406AC863B4F94EB85823AD1CE9D2665D31827F2093E66E9A1CB333AC2C121843522B569F737ABDA7492323EA9EC49D957F5F9F6660267AE93995486DE3B61E801E1211974489157667EE62475C90E571B1AB8899CD0DC7F9FDBCAF533727F99CF24FF3787BB8E7CE99C50C02AFA93A259ACE6E09EE6085AFDBC6D1CF77D9B75C9747B9B52C1B345B23ACE7D6B978B762BE947100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid1153 putdup 34 /gid68 putdup 35 /gid81 putdup 36 /gid71 putdup 37 /gid3 putdup 38 /gid82 putdup 39 /gid83 putdup 40 /gid72 putdup 41 /gid85 putdup 42 /gid87 putdup 43 /gid76 putdup 44 /gid73 putdup 45 /gid80 putdup 46 /gid1154 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 16 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid3 {(\001) 0 $SP} putdup /gid68 {(\002) 0 $SP} putdup /gid71 {(\003) 0 $SP} putdup /gid72 {(\004) 0 $SP} putdup /gid73 {(\005) 0 $SP} putdup /gid76 {(\006) 0 $SP} putdup /gid80 {(\007) 0 $SP} putdup /gid81 {(\010) 0 $SP} putdup /gid82 {(\011) 0 $SP} putdup /gid83 {(\012) 0 $SP} putdup /gid85 {(\013) 0 $SP} putdup /gid87 {(\014) 0 $SP} putdup /gid1153 {(\015) 0 $SP} putdup /gid1154 {(\016) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 979 105 rc
0 105 m
979 105 l
979 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-836 881 m
2034 881 l
2034 -1075 l
-836 -1075 l
h
-836 881 m
f
9 104.5 m
278 104.5 l
282.41827 104.5 286 100.91828 286 96.5 c
286 67 l
286 62.581722 282.41827 59 278 59 c
9 59 l
4.5817218 59 1 62.581722 1 67 c
1 96.5 l
1 100.91828 4.5817218 104.5 9 104.5 c
h
9 104.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 219 229 cm
-210 124.5 m
59 124.5 l
63.418278 124.5 67 128.08173 67 132.5 c
67 162 l
67 166.41827 63.418278 170 59 170 c
-210 170 l
-214.41827 170 -218 166.41827 -218 162 c
-218 132.5 l
-218 128.08173 -214.41827 124.5 -210 124.5 c
h
-210 124.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 143.5 81.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-65.959999 -5.223999 m
(!"#$%"&'\(\)*+\)#&)[ 12.160000 8.896000 8.592000 8.896000 5.040000 8.896000 13.648000 4.448000 10.368000 5.040000 9.184000 9.184000 5.328000 8.592000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-132.79201 15.223999 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-116.792 15.223999 m
(,--.')[ 9.488000 11.552000 11.552000 10.368000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-69.384003 15.223999 m
("#$%&'\(\)"*&\)%+#,&\)-"*+&#.)[ 8.944000 8.944000 9.376000 5.328000 9.376000 9.376000 8.880000 5.840000 8.944000 5.680000 9.376000 5.840000 5.328000 4.096000 8.944000 5.968000 9.376000 5.840000 13.680000 8.944000 5.680000 4.096000 9.376000 8.944000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
528.5 80 m
609 80 l
613.41827 80 617 76.418282 617 72 c
617 42.5 l
617 38.081722 613.41827 34.5 609 34.5 c
528.5 34.5 l
524.08173 34.5 520.5 38.081722 520.5 42.5 c
520.5 72 l
520.5 76.418282 524.08173 80 528.5 80 c
h
528.5 80 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 219 229 cm
309.5 149 m
390 149 l
394.41827 149 398 152.58173 398 157 c
398 186.5 l
398 190.91827 394.41827 194.5 390 194.5 c
309.5 194.5 l
305.08173 194.5 301.5 190.91827 301.5 186.5 c
301.5 157 l
301.5 152.58173 305.08173 149 309.5 149 c
h
309.5 149 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 568.75 57.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-14.96 5.776001 m
(/.0)[ 10.368000 10.368000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
647.75 80 m
728.25 80 l
732.66827 80 736.25 76.418282 736.25 72 c
736.25 42.5 l
736.25 38.081722 732.66827 34.5 728.25 34.5 c
647.75 34.5 l
643.33173 34.5 639.75 38.081722 639.75 42.5 c
639.75 72 l
639.75 76.418282 643.33173 80 647.75 80 c
h
647.75 80 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 219 229 cm
428.75 149 m
509.25 149 l
513.66827 149 517.25 152.58173 517.25 157 c
517.25 186.5 l
517.25 190.91827 513.66827 194.5 509.25 194.5 c
428.75 194.5 l
424.33173 194.5 420.75 190.91827 420.75 186.5 c
420.75 157 l
420.75 152.58173 424.33173 149 428.75 149 c
h
428.75 149 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 688 57.25 cm
-22.232 5.776001 m
(120.3)[ 9.488000 7.424000 9.184000 10.368000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
337.25 77.5 m
497.75 77.5 l
497.75 37 l
337.25 37 l
h
337.25 77.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 219 229 cm
118.25 151.5 m
278.75 151.5 l
278.75 192 l
118.25 192 l
h
134.3 151.5 m
134.3 192 l
262.70001 192 m
262.70001 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 417.5 57.25 cm
-23.104 5.776001 m
(\(#\)34\))[ 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 219 229 cm
67 159.99179 m
108.38934 163.69266 l
S
0 i
CM
335.35754 64.594856 m
327.65652 68.295418 l
327.12216 62.31926 l
h
335.35754 64.594856 m
f
0 J
0 j
1 0 0 -1 219 229 cm
116.35755 164.40515 m
108.65652 160.70457 l
108.12216 166.68074 l
h
116.35755 164.40515 m
S
1 J
1 j
0.60000002 i
278.75 171.75 m
291.60001 171.75 l
S
0 i
CM
518.59998 57.25 m
510.60001 60.25 l
510.60001 54.25 l
h
518.59998 57.25 m
f
0 J
0 j
1 0 0 -1 219 229 cm
299.60001 171.75 m
291.60001 168.75 l
291.60001 174.75 l
h
299.60001 171.75 m
S
1 J
1 j
0.60000002 i
398 171.75 m
410.85001 171.75 l
S
0 i
CM
637.84998 57.25 m
629.84998 60.25 l
629.84998 54.25 l
h
637.84998 57.25 m
f
0 J
0 j
1 0 0 -1 219 229 cm
418.85001 171.75 m
410.85001 168.75 l
410.85001 174.75 l
h
418.85001 171.75 m
S
1 1 1 sc
CM
754 86.5 m
977.625 86.5 l
977.625 28 l
754 28 l
h
754 86.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 219 229 cm
535 142.5 m
758.625 142.5 l
758.625 201 l
535 201 l
h
557.36249 142.5 m
557.36249 201 l
736.26251 201 m
736.26251 142.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 865.8125 57.25 cm
-68.903999 -3.447998 m
(5636&"7#%6*$'-849:')[ 10.960000 3.552000 8.000000 3.552000 13.648000 8.896000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 4.448000 11.552000 8.896000 8.592000 8.592000 8.304000 0.000000 ] xS
-26.823999 15 m
(;*<"74)[ 13.936000 9.184000 9.488000 8.896000 3.552000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 219 229 cm
517.25 171.75 m
525.09998 171.75 l
S
0 i
CM
752.09998 57.25 m
744.09998 60.25 l
744.09998 54.25 l
h
752.09998 57.25 m
f
0 J
0 j
1 0 0 -1 219 229 cm
533.09998 171.75 m
525.09998 168.75 l
525.09998 174.75 l
h
533.09998 171.75 m
S
1 1 1 sc
CM
133.5 46.5 m
278 46.5 l
282.41827 46.5 286 42.918278 286 38.5 c
286 9 l
286 4.5817218 282.41827 1 278 1 c
133.5 1 l
129.08173 1 125.5 4.5817218 125.5 9 c
125.5 38.5 l
125.5 42.918278 129.08173 46.5 133.5 46.5 c
h
133.5 46.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 219 229 cm
-85.5 182.5 m
59 182.5 l
63.418278 182.5 67 186.08173 67 190.5 c
67 220 l
67 224.41827 63.418278 228 59 228 c
-85.5 228 l
-89.918282 228 -93.5 224.41827 -93.5 220 c
-93.5 190.5 l
-93.5 186.08173 -89.918282 182.5 -85.5 182.5 c
h
-85.5 182.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 205.75 23.75 cm
-46.368 5.776001 m
(.1496=9#%6*$)[ 10.368000 9.488000 8.592000 8.592000 3.552000 8.288000 8.592000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 219 229 cm
67 192.55402 m
108.47162 185.99298 l
S
0 i
CM
335.37335 44.257118 m
327.00284 45.970169 l
327.9404 40.043873 l
h
335.37335 44.257118 m
f
0 J
0 j
1 0 0 -1 219 229 cm
116.37334 184.74289 m
108.00283 183.02983 l
108.9404 188.95613 l
h
116.37334 184.74289 m
S
ep
end
%%Trailer
%%EOF
