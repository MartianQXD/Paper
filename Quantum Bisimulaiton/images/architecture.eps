%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 849.000000 138.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 849 138
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 849 138
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /Q put
dup 34 /u put
dup 35 /a put
dup 36 /n put
dup 37 /t put
dup 38 /m put
dup 39 /space put
dup 40 /P put
dup 41 /r put
dup 42 /o put
dup 43 /g put
dup 44 /q put
dup 45 /C put
dup 46 /S put
dup 47 /ampersand put
dup 48 /V put
dup 49 /i put
dup 50 /b put
dup 51 /l put
dup 52 /e put
dup 53 /I put
dup 54 /z put
dup 55 /s put
dup 56 /B put
dup 57 /h put
dup 58 /c put
dup 59 /k put
dup 60 /M put
dup 61 /d put
dup 62 /p put
dup 63 /fi put
dup 64 /L put
dup 65 /T put
dup 66 /G put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


22D0B8001210B8002EDC00BA0022000C00032BB8002210BA000B000100032BB8000B10BA0000002300032BB8000010BA0016002300001112393031133533321E0215140623011121323E0235342627353E01353426272E0323033533321E0215140623ADBE1F372A184751FEE301593551371C464233373123102D343517A4D91E382B1A473F0197E307182C2639390133FD3623394A27425C0E02145339364A150A0A0501FD86F70B1B2E233C4400000001002BFFF002AA02DB0025006DBA001E000B00032BB8001E10411B0006001E0016001E0026001E0036001E0046001E0056001E0066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E000D5D410500D5001E00E5001E00025D00BA0019001000032BB8001910BA0006002300032BB8000610303101332E0323220E0215141E0233323637230E0323222E0235343E0233321602445F08344E6438527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000001002BFFF002B902DB002C00A1B8002D2FBA0002000000032BB8000210B8000010B80006D0B8002D10B80025D0B800252FB80010DC411B0006001000160010002600100036001000460010005600100066001000760010008600100096001000A6001000B6001000C60010000D5D410500D5001000E5001000025DB8000210B8001BD0B8001B2F00BA000B002A00032BB8000B10BA0020001500032BB8002010BA0004000500032BB8000410303125173311211533160E0223222E0235343E0233321E0217332E0323220E0215141E023332360264193CFEC7E4021E3B56383C5B3E201C3B5D4128473826075F0A3751673A557F552B2E587E503F7C595901785031553F242F4F6738396D553413263B293F593A1B3F6A8D4E4682643B310000010052000000B102CA00030017BA0003000000032BB800031000B800012FB800002F303113113311525F02CAFD3602CA0000000001004E0000022702CA0005001FBA0005000000032BB800051000B800002FBA0004000100032BB800041030311311213521114E01D9FE8602CAFD3650027A00000100500000031702CA000E0057BA0003000000032BB8000310BA000B000800032BB8000B10BA000D0000000B11123900B800012FB800052FB800092FB800002FB8000B2FBA000400010000111239BA000800010000111239BA000D000100001112393031131133113313331333113311230B01505A02DF51DF025A82E2E102CAFD360252FDAE0252FDAE02CAFDA802580000000002004E0000026202CA000800130089B800152FBA0001000900032BB8000110B8001510B80010DCB80005DC410500DA000500EA000500025D411B0009000500190005002900050039000500
490005005900050069000500790005008900050099000500A9000500B9000500C90005000D5DB8000110B8000BD000B8000A2FBA0009000100032BB8000910BA0000000C00032BB800001030311311333216151406270111331133163635342623ADBA514B4B51FEE75FDA6C6F6F6C0174010643404044010156FD360124017064646F0000020026FFC302D202DB0016002D00E1B8002E2FB8002F2FB8002E10B80026D0B800262FB8002F10B8001CDCBA00020026001C111239B8002610B80009DC411B0006000900160009002600090036000900460009005600090066000900760009008600090096000900A6000900B6000900C60009000D5D410500D5000900E5000900025DB8001C10B80013DC410500DA001300EA001300025D411B0009001300190013002900130039001300490013005900130069001300790013008900130099001300A9001300B9001300C90013000D5D00B800172FBA0004002B00032BB8000410BA0021000E00032BB800211030312507170623222E0235343E0233321E02151406071737273E0135342E0223220E0215141E0233323701C2324F3033415E3C1C1C3C5E41415E3C1C282A73305E36362B5680555580562B2B5680556348CC3A3F1433546936366954333354693642792ABD3C4A3694524987683E3E6887494987683D2A000000010025FFF0026302DB0039008DBA001E001F00032BB8001E10BA0029001400032BB8002910B8001E10B8000BDC410500DA001400EA001400025D411B0009001400190014002900140039001400490014005900140069001400790014008900140099001400A9001400B9001400C90014000D5DB80032DCB8002910B8003BDC00BA0019002400032BB8001910BA0006003700032BB8000610303101332E0323220E0215141E0615140E0223222E023523141E0233323E0235342E0635343E0233321601EB5A0229475E37315D492C2741525552412720344120284C39235A2F516B3C31635033274152555241271B2D3A1E4A5F01F93B55381A19334F363141291913121D2E2527321D0C142A412D415F3D1E1733513935462E1B14111A2921232F1C0C45000000000100020000023D02CA00070027BA0003000000032BB800031000B800012FBA0006000700032BB8000610B8000710B80003D030311311331133352115F05FEEFDC5027AFD86027A50500000000100000000026502CA0007001900B800012FB800052FB800002FBA000400000001111239303121132303230323130167FE63CE02CC66FB02CAFD95026BFD3600020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D41050085003800


B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFDFB020500000100450000020702CA000B0033BA000B000000032BB8000B10B80002D000B800012FB800052FB800002FBA000800010000111239BA000A000100001112393031131133353713330337230711455550B16CDCCD72EC02CAFD36C44AFEF20149BCE201A7000100450000009A02CA00030017BA0003000000032BB800031000B800012FB800002F303113113311455502CAFD3602CA00000000010040000003150211002A00B7BA0003000000032BB8000310B8000DDC4103005F000D00015D4103008F000D00015D41030020000D00015D410300B0000D00015DB80010DCB80018DC4103008F001800015D4103005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C00000000010040000001EC021100170045BA0003000000032BB8000310BA000E000B00032BB8000E10B8000310B80015D0B800152FBA00160000000311123900B800012FB8000C2FBA0013000800032BB8001310303113113311343E0233321615113311342E022322072335405513263927313855112A44337335020205FDFB0124233B2C183830FEA201542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10


00000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/ampersand 2 def
/B 3 def
/C 4 def
/G 5 def
/I 6 def
/L 7 def
/M 8 def
/P 9 def
/Q 10 def
/S 11 def
/T 12 def
/V 13 def
/a 14 def
/b 15 def
/c 16 def
/d 17 def
/e 18 def
/g 19 def
/h 20 def
/i 21 def
/k 22 def
/l 23 def
/m 24 def
/n 25 def
/o 26 def
/p 27 def
/q 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/z 33 def
/fi 34 def
/uni2B91 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93174D4E3C01712375EA6AD09BB8CBB6B1EDF2EE8AD6EA8A1100B27271714D8F5C5A6140DB449263BB3FF479C3F4E9569A8BA7FA399BAE409304B341CEFD74E12E05717591C67A325150BD836C34A7C2FEB6DDE67B61DABB4D3C87E33D4D63FD808BE3328D3DEC61D15596B51EAE9994C3CEDC83B9E5E1A05209394D13098C4202EF174E6E190225A47FD89A551123A2A526F3C14A4A0AC396597D33296D99D5F11CE9BBF6D8ECF27B5AD5F509AB5524893BB8DABCFB013ECBD385658A4C1279C39539A6E2122430B80E6BEF9594B752969CA040D56BB9E817D8A72CB9E7BD7AB9C164261758D534D01445A45920C059B9A7D6ACCF696E981FB2D9EECB7FB8A6331B7AC61E90E1BC58EABB4864E470D442982E0D4F949B72416C23EB19BCF73430793D3662016EA8C1352B02DAA73D91CB7EF0ECDC1D847C91EEC9A3BEF1A9358970ED366A11DDA4C943660116ABA2E5065B6FB69BE69688D9BEBFED5BB89495C4917E26D87948A41A6FB9E977DACA9BE207EB81527BADD4B22DACE7D8AEBB7A1FCAE027DC573AA2588C137D673C19D9720A8E0E704255CD5266612F88C84A1A3DABD5F78EC1A67B0EF141196D09834C4FD8940CD6A3FF92BAEB263DFE89BCFA79B66E88F2AC672BD013EBA50A2D26EDA39E5904A35ECF3C3221E71F09BEDA3A25AE2A072BC30B09E34A2A64D80993D26F2EF2A3E4D35BC9F638E64BE44913736EA2E917681516CF49084312B31DA3156CFBB39BADC4D180A92D246757B16E7A5D
0BE023575926A7AAEC185401B5284EBEFE28F74F243DB2DF9C76BEC6BA756B65B472A6E2093304CB4061D31E6AE3D9EAF81951947BDF48575E3737284E83A8D5819E7B321A6A13F26A4E739753706298F792FC75CA6B3346B95462C0937E18FC7391B2D2EB6D18C67DC6E7FBC9645D7B21C8C2509E2EB51884BEE07A05576484792F3E062EF380EFFCB3D87AF02E8A987DA218891BDD817ADF555AA2BD7E3A2D3AE88474C3AAD024A83C617CC832CB1E1C6C2A991D86ABB58F7A0BB7EE9044A5999F85D80C26E69061AE85D4DEE40B1A24D649006E6B0C307D5D53897EC022CFC9E4017A0944326B525353087892CAA3274C921C46BBE51106F8ECC9584CF1A0F48402959104E4BD8C0749E3F60A63E47E3BADB2BA94768B1A3C13484C0E653D794945AAA9E41E14989275F03C663A32302F7B442A3D25ACEE943F75C5D7E7F5F87618EDDD57D1A9E06E7C4804EA83779B02255F44D9F7838F6D5FA24AFC21385ABBCD6421BDDDAD2C4A67F8FF07B7D9A6B5C36280205BEDCF86BE06557D6DA8DB44C0BC61E12A5B49B0F4500AF573CCB6FCE5D43C30D7F2094F26B28BF74D2BE352B35337EEDB30B0308ABFE11A92E0B1B6065DF769B4153CCC91743C71405D98BEF2339C80FC2164392FEE0F282C41D9245E10BACC0756AEDB80B2442B06C2CBDA58B06E25A0AD5153024787DF8181CE21A88D36D2AC9CDD0330BB6FAFBEC72A0B339B3FD9B98396FCEBF88C032AF991DF5012FB0411BEAFF567463D0E9D5ED5EA2E048D6A749DF3BA29104E77EB91A6908894AB7F5CA6B2CD4745758AC96F22335B225A2882D340B8D73CE1E7C0D8D42BB4FFF1EE5D6B853E99FE021E0A1C5169D53BE9578CFE411E0BF29B4DF55C236BA7BD21133A9B62D7F0F9129B7C15677307A4A3E534FEE47B845AD12C10772005EB4E421A604CBC2B9382713DFC06E8A6A97ECECDF77FBFDAF95A9EFCF5828BECA3457BA2B1A6F53A036D2A121DA92C40FD177ACD7F6B6EC7FCA2DD38B30131FC3459C6ECB27C0EAE164B31162537574C15572D7E9583120E28C270E89D79DC9623136509DF9DB2C34283D706E5D465A99750CB27AF7BE85BEF40437545BC18B20A6A6A167D5C5B694E2662E71137CAFE6FA2696EAA48A2A6EB5A3F66344A17D2E1087965287182E8081F0313839545442080EBCF79744AD8F817C4318BBD5536421FE054D5631F175AA48C02B699CEA07CBF53444EC61C7F6D73209FC500E2BC6592863223BDD602F571A77F33DDD5341C5BE22CB7E929E8BC2EA2E55F895E411A295F1180D39EB79C60717ED96ADDE5436CECC0325C0BBC9943EA1C1718FDEC25FC78EBEFFC0F6318208C267F7171641FE324D9281C8227A416978764CDA7E52DFE5860F2B817E901A0E6E730B08B839ED8D8303F1F6577D6F7268F5C402FCA4B02801F3E90F0A89C1ACA0060BC
24C41F5D95551EE923002D866169559314BA54FB26FA8C8FF3E4D79C9557B3AE406B5D757D649FB3E7A2212888156D4CC985FDE019C06A16E1DDAEA7810B9064CBDB30E8B2D50FFCAF34A459EA41CE13785BAAD9140A832E05E72E5E6F3DF18297A9667FC8BEB319E7CC527E9EA6CA8C802AD490211500D3999B0E91238E41C08CCAF19DFA1FD518A9650ED6C4F8433558844D70B637EC1DAA7BBCBD6B787265BB4F2175B3324D1FB651A5C94E197041D823ACB56ACAD95AA34835FCB4CAAEEB17FD4DD8226C15FD0DF40EFE564E4ED154CE2F393800DB39BA3534951528EAD6FA2D2771FC241A880A8EA9892A76C5BF47958BC26B8BBFCF2DEBA85C7464CCA5743C5EB0134E4451ED60E351E2FB2FA14092926327D4119E54478EADAE60A375E7B3BD383F776716E7486E92E75C3803DED2BCDE3DA1C71283C644B2433B177D5557D4302FCABB934C9912BDA23438C813EFD6E8FEDA4545AEED34428F526F902AB64B28D910C5E559DF37AB7852E0A3841A079037F80B51C3777F0F0EC67DBB01EE63ABE4273978F64A808DF361237EC8241F5D611B7F90B554E19751E5F2C1D90A9A5E146065FBAC563FD93F700EE93BAD9815C75D1E29D0A3F24DF8AF5D8A1F5C18C5ECF76CF07F1BE293716C54852A494E8FC32937AE218CF7229F7394ACE79F731966848E9FD4E3FCE6A85F9C8B09DB607EBB3861ED1F9DC20400D40307D87F1C15430874E9D75B8C1B5EBC79977D4A653CC024A99DC4D7EA30770C9489DFB130DF56B2B91A167E2C731F32F10994B32264EFD9C9B04E65A892AB114F3359B1357FDE200CD59B5B6833E89D39DDC19C2822A7EDC6920DF5C994D457BA068B2EBD1C7EC9723452BECF26F9EA188128E035D446E2A180564CC04ACE9AE5C2B7ED038A1B4653399D2411FEE449AB528CA8437B6B6F3162EA03E4DED408BD06AF90AD9A110EF3990882F1214704A50AD74B0650F51433E723F345C79BE8F81833EBA01A00F093B4161E72A3BFC952F0630A9F5A3BB2A7B73CB61AC1F3CEF020A7A69A1924773AE001F3584965FABFB5390317177E6DF8D24A6FA025D7CA4AB63B61B256E048512E89C8DD2DE7766F1DEB4CFAAA989A70E1E3BE050B18310AC24E8DFA8080246BC64EDBC2399B1979988F1B0A97B66C5233AA172AFB94BC78B6DDF5B61F75A2E7EA640AD765D0068A7070BC15FE997E0F02883F724903A42D74D28395D5BCC66FBDC0F40C2664639FF6EC9D4A6AC6CC4F81A7BCDFF85F0135C8B05A011BAEF0183EBE1765C96F9783908EBBDA877FEC1E5B8C5EFD7D6E61734FFB74B53ACFE3DBA32A9FB8762A4B8DE0ECA8998659A131885D84A70D425B1471F76594A7A463D12F1813B94A54FBF7756BBD3FB983F1174DF0773BB627F909EFB0BA86C05D5E8175C72312AA29F72FFC2F48E84ED046C8B002D608604C2E15AF



DCC40ECEEA8DE204B01C584F03BCE9C055460C74AE77D518C655F98180D75DA3DF08AB3737C364491EEAD09BD74D01A36DAFACAAB22913FF7468E7A1691D613B1AAE4A2D0F917887E19D5E020BD51B9204493D8651912AB20D93DEC0721CB805849A8F026DBA3115030EA207D119308F1CDF796D901A6294B132D6DE08234F5C194E572CFB2803794B2861BD2B0D9296EDCBC1A26C53855469C88647012BA68042F7BA251787A1E15579137293819ADA45192A1D84F7AD655A8F4AC224EEBF0E8D9DB1601675FE5A693D5A7455D5494E0D9BA32C315CC150F2C4DB7B92ED99E79C398BF482E2A64994354727A92AF589484FBD7BE9D03A35336EC48FA8DC4F8FFA7749AB96B686B1C5DCF980892C2A145481B46FFE5D135BDC28B00B293E6F1A4A9FB9FC7B01D574ECB1692A08F50AA6291934FF6D30445A83751EE3BC2F0B03B4EF22B07E777EA0A462E41D2BAB3837CAB84310F9C99D4231EB87789298EDBB541813C329FA90C5F24A9CCB7FA79049DCFB083A610066C3825425E505A9569982CEBA70ACE67F741A6125637ADA8E39D144D8B1A1E8D422B6D85FB86843501179EC3B85036B48679138D667E62ACDE804958BEC69B66625ACCBF24A966F8B570F568A6422B799345DDE5930AE93E4F1802766D611CAC55AB493611A0B0CCB13840F8F9414FE91B469971E9359144229322B4E907A68A78F23F29218D65A2DE07CF8DFDFDA162BE910BDF5B8C5635C5450FFAFD6FB09AB23551FFC673B6D261B57C50394271CBC3F706ABCEB628A9A3A7321926717DB87E38F5266C4027F917F60B83DE8656020623E5F88CBB6A6FC59C2B150E4D6BFEFEF67F8FD2E93462F3CD9D77EA5F4DE78C0F9CFB2F9C8987C6E0D661E70C6B37FD00B3EEC57E8D864BAD490FF7C7CA3576F48B7B5BADE924CEE469ACA9AA70C5B8E0CB94D670742548697401ABAEDEAA7C599A0CF04CD6D63BBC576256397F9811064FD43E04B384C358C3DDFFD5D2118F2AE8DD27DF05D450F983E54A7C06477F7EBA1DEB429204F4BC876E59C036D57DEDB26F590D0A8098D80C1A2B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAD+PingFangHK-Regular 001.003%%CreationDate: 4/20/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAD+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid3 putdup 2 /gid9 putdup 3 /gid11 putdup 4 /gid12 putdup 5 /gid36 putdup 6 /gid44 putdup 7 /gid47 putdup 8 /gid50 putdup 9 /gid54 putdup 10 /gid55 putdup 11 /gid68 putdup 12 /gid72 putdup 13 /gid73 putdup 14 /gid76 putdup 15 /gid80 putdup 16 /gid81 putdup 17 /gid82 putdup 18 /gid83 putdup 19 /gid85 putdup 20 /gid86 putdup 21 /gid87 putdup 22 /gid1154 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6D92D2D09F107542CD684517A07CBC68D9C44C69279C700C5DB893546FD15B81A40B9F9963AF45A73ACF6D86C420082471AA452E0BAA0519CB645D4567427C36CC4FB594E95BEE01DA890EF4DD9314C0FEA2E6B443F087DE70391AAAEFB648AFD0E7D248172D12B6548A0EF51CD90907C5C4757666E4AB297B18E452E65FB2AF55E7865E115A149B30E96A970DE8DA50C41E1FE1EC1AE7FA975B3D46C3DFF9899A81148456193E277D337EADBD7E902A64D64E5D915CA1C47C1D491D0C529DEAFD61E013B114C36FB46EE32C3ACCDD6B10879F9F76051801B400E93F9822E7AFE87F1BE224208BF1BA205D3E7E7112986AB91B9F40BAB8136F884499E928FE4FEC0C21CE35536A24604A9F68E833AFC1ABEB1D02DD67D598DF0E5FA101B0EDA50E59AF2364CDB324D0EED6A4CF97BA5B1068071DF90E96BCCA3C840E0F56378FDAF82B9C78A0FC16510DDF200E66A226928FFBDAA63A0D6DBAC4F706488D13A4EDDB309AD4CA99AA88692E6EAD26365603B596BE6E0CF8ED5A3E76C4DDD9279F53FC55F975F7A2304DAB102C9720F2B5FB24082980D54C897C89334644A10D634171FAD7117252F2844BD9E6F0FAE49481B78E4AE8ED58FFEB5632C63C35060E25F6AF33E8E354F8120A18F0AA6CBB3F8703EE99BAE3BC1A266C447764E6670DD707A7D2B60BBA1F48860EFDC0EE56039569262D4795CA4EAE9280FB2EC546AF1D288850D893C4DAFD4D15AB27A658753F5892D0031D505AE47C9775D0F61488AD7409F797641A30D157999778198E9D305E5F702D744638B1B24836D0D6149BEBC4411683735124CF0387D56B218C45F8121F8B0C5747A136975F768B61D3422BE6FD5C8F4DDB8E91836B7F13CB803E2B1DBE1D32EFC91B5E46F38BA84163446FF1F843326C35CF9868E17C487DFA1B1FBE206D88CC4BD4DC84B56E6094547E116386252C418E6DF176E4BD686BFC68AC54C688DCCCDD21786B6CC50DA4CE89195EEFB93F1C1434893633B0DD14C5C664171FD96424022C4AA88CC8DE6C53F4FE35F5D9AEF2531998E6446FBEC938F54E09FC38D461ED31D4021A41A12ED14B674F111E1F2703F8FD58A0ED9C4BDBC0B50657710C55EA4D63926EA01E1E38D017E2514A8FE81DC154D43DEED4A3BACB49A148A66CD49BC8CFD01951EA4E6EC43CDA29C264446F7F7D8DFEFE4E730589DC3721BC9C90A8FF50C897E40A62C9EAC215ED8EC85FE6EE7CEDCC8FEFD606D5C136197E21840257CACE80285229612609681B74FA2757293D5715FCC7755935265E71792792DDCBFE76CB084756C4FE5F6953509EDDE26FD01903BD4C30B1D38B6598EEBA0346D3B393EB6177517CE50709D5A7C4765B936F2EEE231417E2FEA205AEA95062232E1495965BB029C7EAF949DE22A7DA435419697E71A604EE85821D04D7CAA33ACDE13BCCF085D1C08A4433B6CCCD210A1845A286C72A527E27E51EC4C480864644CE25823325D8BB594BB79793FE965E3BC495EBD55052F39B564FE1CBCA79B4AD47983C328BB67CF0E69170BAC5B6E24B0575D47938D86EDFCE854D3B63BDBBBD745295E155D57B5DC09C95C92EFD37DB07F802141CEAF935582BAD0128A90F7FF8A713BCD84E46045A4C4300CF3DD6441467AE751D8E53F55D54886079D2E5CB3F01481A4861F33240137A1A2FEEF8E4A95CAAB291D90C74FE239FEAFDCB09761B64207199B6091065B40018407AEEC5B53372EA1614CC8D69FC850EA034EEB0EB188B9D0BC472C705A44831EF89FDC14EB8CF62AADF96B88F3551CCCBD968ADE489C5FA8E5742A02D12EA659378CA44EA0C0A6EA70F13C4D758943C6D023AEFBC3C263A0DE688A8BD8E4816ACC7D88D899822038DB63CCF052675B621102F0216C9FB2A2C9379DA7EA1BB9E4DAE6E0F726C6ECAC64D22E5F2E691917EEEFCEB4D42A13FFD27F2D7D8B4B9490AC13B4532607EFECD7090E962A159726A70992C3585F7ACFB21187CD4A403A2A115C5D630996D136E46B47143919A6B27AB6522D4139FAB0FA203E757F19C8ECB4AB60E74E62C934FD7D79D149475724B1952001EEC71B1709624D0D642121631AF719A47D6309B582F90F560CB67C6757B7D86707025E9F3EE5AF7275366559B127EF9DF1673FCFBBD5E68A0B83A75D6953592EB35D5D5AB8113C01E17CF620BF8977BFD8492A39B162025196148056C034324C4119520993710683A42526356121FEE8D383BF7902FEFDEC68A31D42D6242EABDDC91DE51263771BCFD1B3C1D30C729FC3A35D6C2186EF17BBFF43FD5D1D5FE100038629690538B71F9D4E481911A3CF01C32E7BFEE27593303E48B5B4511A96F0BB78121FC685C26366BB3A22B38F5DEFD4E2CA48A3547AE2466BF993778B7CDD8A67D6A35C4A8A02B3454EA12127F48225668744A00BF9256EB30698B25DF47BB2C5165F9A5F5DD3AF215423024C4102C4191710EA201265CE0E5AF710C859952AE30672CACAB2FC567A15E72934CDB3967DAEC1D0659CBDA16708A4E33FFE41EF534F81DDC48BC8BA6725925D1B375B38AF2C8B80620D3AA9929B914426933ADF3FB9CA58285B9E54FD7C0FA55FA2E518F2AA2CF131C038FE513C437D2BE6D82F2E18FCD7C3738B8CD2CB44F0B5B1DE35200C113D01735A1731695BBD388CD76580F49D67DAAF7DDB42DBF4BE0A72AAFE741190BDD1F1A7192FA844A4C5E4999A0FC4B2AC1E50D5A12EA88350DC768D9FEC589F1B8D542E215A159D1820FFC2BEBDA16A36A0A40E67DCED7E3ED23C176401884496E4167D5DABE772ECEE3E314F661675F602C3A310A69C53CBE364B25C654B5B01C653AC1BCDE81A90133246048DBBFC608AA7DEA9D60D325B063D7C00321D29E0D2BC6EF4E558B4C05689D14A277369E5A7A777D25A93EDFB84630235C8C2859F2109B3EEFFF5C52B212A7A4559B1F8B778F3840FDB8062D73B9E18EE044AC7252B024662A5AE1FB3F93A9080F9855E9355708C7034AF097AE8C68BEE1E27FF25ED78645BF5468A490C61A773D9A019F9204C8A75AEF05AB00849A6C29556512A9A2BE520BBC746EAC953526FA3E6AA1241D99BEA5919B6B4103232EB461FD408DEAEB5EAB6F60A5D4E1ACB699FF774CB46A88D1DF4E4B3C013AA084F2251CF7AFE9B46E817B484AB18B0F777E28AD2ED8704CA5E2164E5B7A4A850200809C2B740D9026E181CB5DD85A741AA9B890862FB3C28E91B406F7991165DCCAB03DDAED56D8EEAB557266B052849ED6D1AD2845B630D986D347A391B5E214B3110FF42BD220903123298EE8D0F809A935778DC1C927B9775F9B0496409956F7F78A1D40423147BD8B7885C3648E2D04BDF93D57087CB0EC8F8F6D4A008A80A4FC9B1829A9F88B342C483513BF6AC3F427037E57F7286757B871544621CA45DC00C58599DEC7A3948757D51AB9C6AAE48A3C458B87E558B1D9C895F9BB0CD9747C730228BEB9FDBDC1C6118EFD42A1792CE5A2366B6F7FF72EC23956D41716738F5355D592215654276C40EFDC295D4750E2CEFBA89EA15C4C64B9A6A667E27CE98BF017A492CAC54B55B754B2FC280EB0B79BACD939A6CCFDB61B8936BE1FBDB54EC52854056BF18CB0113E632EDE4C96C7D3176D4B547D5968CFEA4632CB00AA867C5C579CDF9BF8065E1E9D5A559E28102A2890ADB5D5E853C5BC432FC3B2AF6BE9FED4D0C8F70138937E56891DE9ADEBF8F548879EFEBA03FB7D1D487F02D063D1801454295AE11152425D127739A46E37653435E28AC4DFE3C7E20438FE6CC59DA78EB9C0840CA2E5061570FAB136F8F43330EB3343A87B841706A605AD86046663287F3AA6072C548837C24DAD309027A4878DAF7F734408C486A417221F00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid11 putdup 34 /gid9 putdup 35 /gid3 putdup 36 /gid50 putdup 37 /gid83 putdup 38 /gid72 putdup 39 /gid85 putdup 40 /gid68 putdup 41 /gid87 putdup 42 /gid82 putdup 43 /gid44 putdup 44 /gid81 putdup 45 /gid73 putdup 46 /gid80 putdup 47 /gid76 putdup 48 /gid1154 putdup 49 /gid12 putdup 50 /gid36 putdup 51 /gid54 putdup 52 /gid55 putdup 53 /gid47 putdup 54 /gid86 putreadonly def/$SubFontArray [/AAAAAD+PingFangHK-Regular findfont ] def/CharProcs 24 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid3 {(\001) 0 $SP} putdup /gid9 {(\002) 0 $SP} putdup /gid11 {(\003) 0 $SP} putdup /gid12 {(\004) 0 $SP} putdup /gid36 {(\005) 0 $SP} putdup /gid44 {(\006) 0 $SP} putdup /gid47 {(\007) 0 $SP} putdup /gid50 {(\010) 0 $SP} putdup /gid54 {(\011) 0 $SP} putdup /gid55 {(\012) 0 $SP} putdup /gid68 {(\013) 0 $SP} putdup /gid72 {(\014) 0 $SP} putdup /gid73 {(\015) 0 $SP} putdup /gid76 {(\016) 0 $SP} putdup /gid80 {(\017) 0 $SP} putdup /gid81 {(\020) 0 $SP} putdup /gid82 {(\021) 0 $SP} putdup /gid83 {(\022) 0 $SP} putdup /gid85 {(\023) 0 $SP} putdup /gid86 {(\024) 0 $SP} putdup /gid87 {(\025) 0 $SP} putdup /gid1154 {(\026) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 849 138 rc
0 138 m
849 138 l
849 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-836 930 m
1812 930 l
1812 -1026 l
-836 -1026 l
h
-836 930 m
f
8.8125 136.75 m
217.375 136.75 l
221.79327 136.75 225.375 133.16827 225.375 128.75 c
225.375 83.75 l
225.375 79.331718 221.79327 75.75 217.375 75.75 c
8.8125 75.75 l
4.3942218 75.75 0.8125 79.331718 0.8125 83.75 c
0.8125 128.75 l
0.8125 133.16827 4.3942218 136.75 8.8125 136.75 c
h
8.8125 136.75 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 127 278 cm
-118.1875 141.25 m
90.375 141.25 l
94.793282 141.25 98.375 144.83173 98.375 149.25 c
98.375 194.25 l
98.375 198.66827 94.793282 202.25 90.375 202.25 c
-118.1875 202.25 l
-122.60578 202.25 -126.1875 198.66827 -126.1875 194.25 c
-126.1875 149.25 l
-126.1875 144.83173 -122.60578 141.25 -118.1875 141.25 c
h
-118.1875 141.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 113.09375 106.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-65.959999 -16.223999 m
(!"#$%"&'\(\)*+\)#&)[ 12.160000 8.896000 8.592000 8.896000 5.040000 8.896000 13.648000 4.448000 10.368000 5.040000 9.184000 9.184000 5.328000 8.592000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-106.064 4.223999 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-100.736 4.223999 m
(,--.'/'0#\)1#234'5$1%1#316#%1*$'')[ 9.488000 11.552000 11.552000 10.368000 4.448000 10.080000 4.448000 8.896000 8.592000 5.328000 3.552000 8.592000 9.488000 3.552000 8.592000 4.448000 4.144000 8.896000 3.552000 5.040000 3.552000 8.592000 3.552000 3.552000 7.680000 8.592000 5.040000 3.552000 9.184000 8.896000 1.217250 0.000000 ] xS
-105.68 26.223999 m
(''''')[ 4.448000 4.448000 4.448000 4.448000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-83.440002 26.223999 m
("#$%&'\(\)*'#+,-*'.\(\)/*,0)[ 11.616000 5.328000 12.272000 9.376000 8.880000 5.840000 8.944000 5.680000 9.376000 5.840000 5.328000 3.792000 8.944000 5.968000 9.376000 5.840000 13.680000 8.944000 5.680000 4.096000 9.376000 8.944000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
250.5 126.5 m
329.25 126.5 l
329.25 86 l
250.5 86 l
h
250.5 126.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 127 278 cm
123.5 151.5 m
202.25 151.5 l
202.25 192 l
123.5 192 l
h
131.375 151.5 m
131.375 192 l
194.375 192 m
194.375 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 289.875 106.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-23.104 5.776001 m
(\(#\)74\))[ 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 127 278 cm
98.375 171.75 m
113.6 171.75 l
S
0 i
CM
248.60001 106.25 m
240.60001 109.25 l
240.60001 103.25 l
h
248.60001 106.25 m
f
0 J
0 j
1 0 0 -1 127 278 cm
121.6 171.75 m
113.6 168.75 l
113.6 174.75 l
h
121.6 171.75 m
S
1 1 1 sc
CM
633 126.5 m
848.5 126.5 l
848.5 86 l
633 86 l
h
633 126.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 127 278 cm
506 151.5 m
721.5 151.5 l
721.5 192 l
506 192 l
h
527.54999 151.5 m
527.54999 192 l
699.95001 192 m
699.95001 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 740.75 106.25 cm
-79.720001 -3.447998 m
(8171&"3#%1*$'-94:;1$+')[ 10.960000 3.552000 8.000000 3.552000 13.648000 8.896000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 4.448000 11.552000 8.896000 8.592000 8.592000 8.304000 3.552000 8.896000 9.184000 0.000000 ] xS
-26.823999 15 m
(<*="34)[ 13.936000 9.184000 9.488000 8.896000 3.552000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
191 62.5 m
399.5625 62.5 l
403.98077 62.5 407.5625 58.918278 407.5625 54.5 c
407.5625 9.5 l
407.5625 5.0817218 403.98077 1.5 399.5625 1.5 c
191 1.5 l
186.58173 1.5 183 5.0817218 183 9.5 c
183 54.5 l
183 58.918278 186.58173 62.5 191 62.5 c
h
191 62.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 127 278 cm
64 215.5 m
272.5625 215.5 l
276.98077 215.5 280.5625 219.08173 280.5625 223.5 c
280.5625 268.5 l
280.5625 272.91827 276.98077 276.5 272.5625 276.5 c
64 276.5 l
59.581722 276.5 56 272.91827 56 268.5 c
56 223.5 l
56 219.08173 59.581722 215.5 64 215.5 c
h
64 215.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 295.28125 32 cm
-46.368 -16.223999 m
(.>4:1?:#%1*$)[ 10.368000 9.488000 8.592000 8.592000 3.552000 8.288000 8.592000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-106.064 4.223999 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-100.736 4.223999 m
(,--.'/'0#\)1#234'5$1%1#316#%1*$'')[ 9.488000 11.552000 11.552000 10.368000 4.448000 10.080000 4.448000 8.896000 8.592000 5.328000 3.552000 8.592000 9.488000 3.552000 8.592000 4.448000 4.144000 8.896000 3.552000 5.040000 3.552000 8.592000 3.552000 3.552000 7.680000 8.592000 5.040000 3.552000 9.184000 8.896000 1.217250 0.000000 ] xS
-100.344 26.223999 m
(''''')[ 4.448000 4.448000 4.448000 4.448000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-78.103996 26.223999 m
("#$%&'\(\)*'#+,-*'.\(\)/*,1)[ 11.616000 5.328000 12.272000 9.376000 8.880000 5.840000 8.944000 5.680000 9.376000 5.840000 5.328000 3.792000 8.944000 5.968000 9.376000 5.840000 13.680000 8.944000 5.680000 4.096000 9.376000 8.944000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 127 278 cm
166.0605 215.5 m
165.06836 201.87386 l
S
0 i
CM
291.4874 84.105019 m
289.07629 75.908279 l
295.06046 76.343994 l
h
291.4874 84.105019 m
f
0 J
0 j
1 0 0 -1 127 278 cm
164.48741 193.89499 m
162.07628 202.09172 l
168.06044 201.65601 l
h
164.48741 193.89499 m
S
1 1 1 sc
CM
390.61227 126.5 m
556.6123 126.5 l
556.6123 86 l
390.61227 86 l
h
390.61227 126.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 127 278 cm
263.61227 151.5 m
429.61227 151.5 l
429.61227 192 l
263.61227 192 l
h
280.21228 151.5 m
280.21228 192 l
413.0123 192 m
413.0123 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 473.61227 106.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-59.863998 -3.447998 m
(>@A.'B4$4\)#%1*$')[ 9.488000 7.424000 9.184000 10.368000 4.448000 12.144000 8.592000 8.896000 8.592000 5.328000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
-26.823999 15 m
(<*="34)[ 13.936000 9.184000 9.488000 8.896000 3.552000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 127 278 cm
202.25 171.75 m
253.7123 171.75 l
S
0 i
CM
388.71228 106.25 m
380.71228 109.25 l
380.71228 103.25 l
h
388.71228 106.25 m
f
0 J
0 j
1 0 0 -1 127 278 cm
261.71228 171.75 m
253.7123 168.75 l
253.7123 174.75 l
h
261.71228 171.75 m
S
1 1 1 sc
CM
334.73306 122.75 m
375.73306 122.75 l
375.73306 89.75 l
334.73306 89.75 l
h
334.73306 122.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 355.23306 106.25 cm
/F2.1[ 16 0 0 -16 0 0]sf
-15.264 6 m
(234)[ 10.512000 10.112000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 127 278 cm
429.61227 171.75 m
496.10001 171.75 l
S
0 i
CM
631.09998 106.25 m
623.09998 109.25 l
623.09998 103.25 l
h
631.09998 106.25 m
f
0 J
0 j
1 0 0 -1 127 278 cm
504.10001 171.75 m
496.10001 168.75 l
496.10001 174.75 l
h
504.10001 171.75 m
S
1 1 1 sc
CM
561.51758 122.75 m
618.51758 122.75 l
618.51758 89.75 l
561.51758 89.75 l
h
561.51758 122.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 590.01758 106.25 cm
-23.440001 6 m
(%5436)[ 9.376000 9.408000 9.904000 10.112000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
