%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 859.000000 98.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 859 98
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 859 98
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /Q put
dup 34 /u put
dup 35 /a put
dup 36 /n put
dup 37 /t put
dup 38 /m put
dup 39 /space put
dup 40 /P put
dup 41 /r put
dup 42 /o put
dup 43 /g put
dup 44 /q put
dup 45 /C put
dup 46 /S put
dup 47 /s put
dup 48 /e put
dup 49 /B put
dup 50 /i put
dup 51 /l put
dup 52 /h put
dup 53 /c put
dup 54 /k put
dup 55 /M put
dup 56 /d put
dup 57 /p put
dup 58 /fi put
dup 59 /L put
dup 60 /T put
dup 61 /G put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC00001A34686561640000000000001F1000000036686865610000000000001F4800000024686D74780000000000001F6C0000007C6C6F63610000000000001FE8000000406D6178700000000000002028000000207072657000000000000020480000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546
206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C70003004E0000028002CA000A0021002C0101BA0001000B00032BB8000110BA0019000700032BB8001910410500DA000700EA000700025D411B0009000700190007002900070039000700490007005900070069000700790007008900070099000700A9000700B9000700C90007000D5DBA002900070019111239B800292F410500DA002900EA002900025D411B0009002900190029002900290039002900490029005900290069002900790029008900290099002900A9002900B9002900C90029000D5DB80012DCBA0016000B0012111239B8000110B80022D0B8001210B8002EDC00BA0022000C00032BB8002210BA000B000100032BB8000B10BA0000002300032BB8000010BA0016002300001112393031133533321E0215140623011121323E0235342627353E01353426272E0323033533321E0215140623ADBE1F372A184751FEE301593551371C464233373123102D343517A4D91E382B1A473F0197E307182C2639390133FD3623394A27425C0E02145339364A150A0A0501FD86F70B1B2E233C4400000001002BFFF002AA02DB0025006DBA001E000B00032BB8001E10411B0006001E0016001E0026001E0036001E0046001E0056001E0066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E000D5D410500D5001E00E5001E00025D00BA0019001000032BB8001910BA0006002300032BB8000610303101332E0323220E0215141E0233323637230E0323222E0235343E0233321602445F08344E6438527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000001002BFFF002B902DB002C00A1B8002D2FBA0002000000032BB8000210B8000010B80006D0B8002D10B80025D0B800






055405C6066406CC077E07D007FA082C084608E0092809C80A600AF60B240BC80C1A0C6A0CE40D1A00010000001F0096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/C 3 def
/G 4 def
/L 5 def
/M 6 def
/P 7 def
/Q 8 def
/S 9 def
/T 10 def
/a 11 def
/c 12 def
/d 13 def
/e 14 def
/g 15 def
/h 16 def
/i 17 def
/k 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/p 23 def
/q 24 def
/r 25 def
/s 26 def
/t 27 def
/u 28 def
/fi 29 def
/uni2B91 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9310E889D4B294081CFBE92AFCC7FE3BB36C58496644FE561335DE1474FE8AD03205701574C44B4D576342C56A9D706E281EA108DEB8D3620968689F108F42E3465F4907B536F4FE9D04E7B81671C8015D28B6AEAA2F95E411CFBE9B6F24E72233C8DF2ECB36E76424D0B3BFB2C8FDB9C0F23F87BDB76948479D11CB9FEF9CB1EF517A3263962962008D031A5D23B7035A41C1D2273B76601B24EB8663AB9D5ACDE009CC7CDD9386F0BA734670B0F97E2B6AE8FA10A98A515EF31C6276992F56700EA2E3699BA4CC6E290C30A545D9F1093A2451306EBEFE8648B33A42631DCD02DABA83EF56F0879E6750AE49EF8D4B728EBA69F48CFE84F69461A47702933F00E980B706A1BA565E07E40DC4B5FCD04CCC16AB86BA3455205E211C464B76335FC256BE4F56C793CA6786E70A6CD331D807520BC681A318E4D33BE5548CBEA162787B8BE3DAE5C8000D04805A5A6293E4FCDFBF495EA71733FB56CCDFCB0BEE9BB535B3D3023BCF449A6BA62A83B19348E9F42A03E8E03D2B63DE005718EFE31AB1289BC71905F7396AC3C92E4544E16B865FE719712427A1A4569E86CCAA020B59B0FDEC2561342C06F2755A0640D617B9E75FAED04D40A383CF1F68E64DB0F2BC4063D9841919A1FAF557AABC39B1E9D2F783C7FB23C0811F94C9B434CED91B1F72DECF0E8D2705260A166BC2578D334D6544CEE1DC795A918826FE4C70A3D7A67256D08DBCB6536EF9510BAECB556C9294585B6C106FBBA69D0E63A395AE45
7771F1FECABA6ED61BEF9E33B22D3E1C347EC923F4012F3DA5B7EFD65133EFD42FF5F5BBB49CCE640965770DAA1BEC3A6258BD6DEC687CC653AAEBD5192687684E4EE611849681406B8F50EA3F8D417142C843D350223FBAA80107CD83E8DC75410BC4F57B531EB0609057EFCCAC0727BF950D24E422F67B4779868FDB0D5358081FF773CD512B8D853263EE8CCFED0A2FB0391414D7AE38D54C087CB7806438117999AD464DE53FB4308E668F087850D7CF10CA2B8A32AD8E5D8B144408684C43D3D3B99F4E41CE31220A10DEC934EAFA11687743E003725C9D7826BB361A3B39B166BE74C0F6A50932E27E7F1D330744738880F6865D7251D3BB04E3C435B2F41D3DE4CAAFD230307CF09AA50D2115597DA8B431EE7AE13E330D950CA60F1B228E267645888798A282ECD36598081A8E69F5221F669CA4490FDC0212FD2AC9543D99382EB3630FEB5239CC6ED3E75F9604D722B9D911EDC5A58B7B9A3858068E48E12FEFD0837E5147A50BA485A15F204BA86E7AD9F41BEB79475F252FB3EBBAB0E4BB49220FFE58562C8A00AB9F39434A6C7DE0198BCC2E93B13DA9555A116CFF586E96B83F53E7D553B1BB0749A6B05FAE7FDDE09DA0B93C067FB4B9970A8EBDDCB8E706204BC6638EBB0B71E06A52A0875A0906B8B3F1B2192F5EB64F7FED753851462CEA8F98CCA417CD1056043C2AF69BCA0C8991034F8FCD74025C03713341F8A1FEC8806016B6B07632DC67621E9C8F568D5F9D0E3A7C779BB415E71D4AA19B6DCFB323E583CA7C2600A3EEF0EA6A8DEFD8664EF976EAD87D048F1211A1F0198B9E8A7BDF2F1A584C2A76E63B2B9CDBDFD9CBA8DEA94B39889C754B1A09D455CD4AA8CB07A1B966B891C970EAC029129ED08DB7A19762C134FA3466D7A107987D4A568FF88EAF537FBB0ABCBE25EEC9BD8EA80193A762F2924EB41A68C6A864511D30195C5CD3D7DA261EE173DE94351F947CFB4C4DBE86ED73A894CEA8B501211C9DBAA97AB00163DB4F4E471B4F8DBDF00179C5668E911C020CBBA8361E2501937FAB84C4C52C74C709028A19E69EB68E711FE9FF7B033D21BA025ED4391E4F43BE485C8AAD67B72C20191EDB048A03226BA2F03C3DD172D012E84059742615C4941A082CD552EE2F1A21077C3FC5BEA5445798EADC0D86F5777DE47B1237AC05971CAE840E1658B601A2A4DF8EF45FC2EA7206E59D4EF369A44E91B4F23CA5F506F8B91EB14896C79584AB52EA435E82447FAB5A5A0AD2293A6E4D1DDF55A25ED9AD198BD3656F2949CF47F8DEE87E10F06E35652DDB77666339D90AF21050E6DCB3E2A0B67958FC80ED5BC712EADEF72C1AAD6A517ECF69D82CFB9DFE41CE4BFE679E4A87D7503271E36A5687E656DE781713E7659C1CC12D13CA9D64BFC336E28AFF29C82BCA80DD011FCCA5798E4BC00BCB56F1743A12E19B

002E1FA833FD33F3C4B3BCC721F6CC482A4E68361A471A0124A6E627EAC83106ADBA8F8FE7A3DA6E7E3C37FADFB75B74E57F39562B3F862DCD9D29C6151BDDB546A76532BBB49AA98549F39F4F68AC7F9BFD8AEA25EB585ADCA306F1D48E5EDCD8670CFCD971282DD7BAF2A458DDD8F9AAF34B32ED0E138C293E216947B8CEC195722303307A8ECEED8791D2BFE9E1A4403916C09B87CD3C493E9E89CC998C1BA9224158684092D36AF1FB958C10DBB50DA9A55A65739AF06C4B47DBF622253E371F618380BEAC0BE389A4A563984A3CC48671A427EF5CFBFE16263D21EB9AC1915433A5DAAC1BA16F8AD1E1A6527045A4168558B844F230FA4EEF8E43BAD556A7BA219BB3002517939E511D5A11D91F053A29F58471C9773B676E620228AAC064F844A51BF0495CC65FB77E5C7C232BCF652EAA53438D7B9A935743B6518A556104F60D672CEC77E89EF43545813A31C23043A85C77AD6A9C169BD2421A60EDE217EBBE886D655A97132EB6C023D11766F553812C36E60170F934157D8138399A74FB91AF550F70346AD9504909312E87E0847AB8A5A5E08E9C7D65CC59C2CF2012AEF623605874D60B421B30C7ADF0FFD1B2BAB82717A9CE963DF9F8515D01FDD851E35E3EC9BDB11E701FE0D5779C05598AC86281DAC990F4E83F5E492AF36526661E01D82D5A26829F26BC28AC79061C6CD3139A51A54BCE5EF0B15DBCF83D6A1303F697226AFB4083FA2E66B2C40465EDFD56BB76F22F3B8BAE18B8025D685B41B0C46B9DEBC36C78E364861465A02F2DD045775414B866A6EAD2310D6F2A11B6E34B08EB8554AF555A0BBEE67344488B252F79D842589012611E641A408D64C4FECBF176C3391FA356F481C1AD2D62F47CE727FC211AF12DE9724A8B6950EED43A8A0B7F32991AB691BB4185F1522BDAEF4E348078FC2E99C6AD9E780FA8CFEE3D9F429233C374E9A0ECDE7EB6CC3E0F751766275060DD0F18D8354E224BAE4ECDC8E9FD6DDB960188AF3336A7CDFFC6300528326A7FB747F2814552372D3E7867DE8F6071529E0E712DFE981FF232F8E3B567FDDDF32E6625463FDB27D76DCBF84FF78D2C6E2B1812445985D75CDC5B8670900AD28A8B74CE082FC1F598046A22CFF4A27E210450943255D647E339FFD3EA4054A57CE847A0AA1A9B164A038E69D34F022D36E070EDF87EB2E7E7E81CDEA9E4EC409409F050C71AAE7B9446DEC6850C04A11EFAD245C99E3E381BBFAB051384FE1DF5DA8E10701ABF9BA2A0D8B24E19B7E1AEAA98D301E5FC5A545C2D0DBBCAE3A4F86EACF912296B3A5B31652488083DD1DEB09564A793E9F87AFDB0C57A190F244A5A5CEB42ADC0096C8BD3D666BEEC5C7CE958BAADBE41A7C65FD51C8B499E4A0C3354F6EF0682ECF855D20F804CDC76F92776C2F26C6AC8369DC1A37CF1B461702BEBD07A9B5DCB

841AA40792183809F401ABA829AEDF08B649A8457F9BD9AE3F1BADC353C72A579B86E371123313883AC9607C098FA793276C1C9A660A94488C07D58BBAC42697F834BE6D5EE06E6A102B858175071311D00EDA1335716B366BA29F627B5E613C141FE662C5F0C5FB97E89267A906C83938DB39FCE5B8AC0EC9F84E04D4EA6F66BF11A3967643AE1E9496BB70EA417005EE972ED4AC4D9FEE4832ACBCBDBB876D5CA1C87CC5D992413E6C06618767DEB1C79341E0229324B789778FDE09C679D2D8AB015253200A1F215530F5D733C489595F3DB123D8C79B1D54BD5C82DF1A10E12D402106BEBB4BD7DF8828D26DABA7A70886297C6AD6FF7EDCD1F5EC16CAF1F001167B6F8402AEC45F0B1058093FD138F2E885C95FC0F39C834947669F389C405D4198B9B920B486D7F7C492E357B23BBC90D134CDBA25246907E7FB82253BA5ADE8BDACCED22454FBBA7D70289046376A23918728EB4C5110D45CE533B52B89BB6F049C5B0C98EFAAA4C8EC18D43A7A45C5DFED12C909729810873FF7D5C57172183E64C0CA168D4ED93D17E68EBE6D167251481351FEEA6129A7127F349CD8348C269E4A0833E2A82AE7BF61F6B03575844BCC7284B4CC944ED6C434122478D7A96119D513158AB78EB94DA589E226B84CEC46BC6C666B85FBCAB508CBEE1EC4E8EB0C6C0FDC2AE9DB52165532CCE6849298E617F86F8412304EF2303689AA2FF691BB0A33335F216B3304D700FA0B7E4B980039D70179F551020B30C70CAF125EE1F539DFCE3D369E393BE43368C82CD797FDFCB7FAD3020210E29F5502ED06B0149A813DD12521D88203D18E116FE8323C9936E8993047AD95C4C74FCF4E333D2EC0EBAB65BB294BFF0A3FA659026961EB6AD30BBD39853CD5F525BF640763365C34BA04040AA44B2C1469AA19624CE17B8E48EEF56878AC98DDCAD985E86939A9A9F000DDB5AB995971E1991470121EE17F96B201B4E099BBDD73E4A17D849CB0EB96C1391F92005776B152210950D3CEAFA6D5ADCA6BA7B8F93AB257F26573EF8F51F51F1B1C3DFEFA5E047B12C03065967D6DE35300A2884F8D2739E50E47E98A48D0D414FD7998884C31391C1005F49BFCA8B8FE8B6324E6F84A7184EAE2C6E8301D3D60C5A77DC55810DBBDDADC9CBF1F67AD5C92ECB7765511DBD37A07A58271BFB6525DE588C5BC7AD8FEC659AF07C8D2312EE50A0EEDA17B17CCDA7297E1830C9C0F40A71D83158F281A4531DC85878B6F7C8138214C47E4BFCD9D2104AF9EF9B74EFEA7BCE212BBCFA93479B1D630402C1E4E6793F5677CD5B34C82FD067ED2C38910
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAC+PingFangHK-Regular 001.003%%CreationDate: 4/18/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAC+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid3 putdup 2 /gid9 putdup 3 /gid36 putdup 4 /gid44 putdup 5 /gid47 putdup 6 /gid50 putdup 7 /gid54 putdup 8 /gid55 putdup 9 /gid68 putdup 10 /gid72 putdup 11 /gid73 putdup 12 /gid76 putdup 13 /gid80 putdup 14 /gid81 putdup 15 /gid82 putdup 16 /gid83 putdup 17 /gid85 putdup 18 /gid86 putdup 19 /gid87 putdup 20 /gid1153 putdup 21 /gid1154 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6D93E1024AD5830B452229862B35C2D98279B58193A2977C920345255816C4E27B8AC068F9A15690B331DF5F0FD5F154D805BF829D2168CDC27B8759772688E25AE6CBE79F0CC23B36A756B74E9D6E459220521192ED4BDA5A50067309C5EE656B88F5966E816F7DDFA1EC3D6C31D5AD09B08346E0B32A69D522F83BD80B5A5B8B31F953576476704FF4EB8B783C497D394CD54C014839F7C4C959EEB3752A353069F982C4B70E98AD70FDDE5FCEC7197B44290BC04E84C7EB1920BC2352F38F9B8A83B6AC50DDE47F013767D9866AE24A28DC7543D1E8C7F95D8BB93524342CAEA1EFBF81DE94D5398A3F2C60C30A7FD2BF2AB892C2A8CFAB3F56A991AB6015866A1FBBF038075637E53BEE5C5AFB64D21DD61FF20608B231819CD349D2570DB811D760EC6A56BBD5F5FF48B15DEF59BC70E7D13696AE4B1E1CB34B6081B9DA2230CCF18BD98570DEF8189EF3CC36EB8E863E2C3734F0E3A3F3B9D5E78B634ABC697E4C4283C233C8744FD56CA4A3121CB269F6E179702DCC1AEDE0F8022D46FCCB78B904F3F6CC012CF9E95FC9EE2A813636B37FA3E67FA157B655E70B22F57589F09E34CD84AD36F269BBFADE0C60595E60A8DCE38246532ACA94356EF201DD37CC35511E36F6D2D49FF1EE19E18DFCFE0734E58AE0821BC9C494A9ECE26A7A50DEE42C835E5A5EA4DFE7C5295218F4F15B487D15ACB0D2690B6D66E3DFC921C4C58EC2CADD9288D680FCAD7F86556D7A49C6DA887E97966CFDDAC171886730276508F28A7D663FC1E03EF167640363CEF635C44E4280BD1B3605CA584BF9B421C77D7602537EA95B21962F052E453C099F0C856573B9DF9A998A35ED02D8ABD87A46E1ED0B956DD63F16F9022F2DE1F72F04D0CD2103ADBCAE28A8D95F1B1EC40EDD416DEA606BDDF7477794B40E66201A42B0409878C0A33EE750DCB885543689EEBA85BAD11E560633A2A44CFF0E49D93DBEC24B8BFF97E5CE9C3D19FAF8B2DF854A5C610AC1306FCDB70AB05BFFE1B4CD1EF0E329DBF4DC56CC1ECD416BEDF9FEBAA491C17A9A740FE0E4B51ED37C042CC15FEBDA2393E9ED65D13984608F000D385678CDD9320A97BDEED0C4AD42C341BF83A63B53DBB76309DCDE86C8CD247EFFCF85B3E186DD73C451DEFCED82D60D160619BB7F13FD1773618A5DE62742DD377413872617C2301A126414CF163BBEF33E27796E5FDFA7318404D5B16D1430F45BA3DEA65040D56D94879EC6624EF65EEEFE027C42785B1DA29090F2FDC55A79208E22A9C44360772B1CA7781D6E436D0980C4E65A35ABD93EAF0F5FBA3C60C6E5B796DDF0076966630DDB3F49D1B626A4435039B7838D3251846052416B6A3B1D0D3BD5C585063A7BB324A7C4E9172DC9F47D6A3783AF068F2DAFDA34BEAE644D4B41401174254F8019486F7825835C8251F386ABA99221273858C3C9B646F034405BA989C7E62F1A30E093B6D5D3634E3DF8C9D68D18C37BD5F0F476F5F06FB520A11E851A5002564A4012CCFD5AEFD435F0F025EB012AB02DCD9726B9832514FA610CBEA0676B6F42A4BD5091092BCBAFE19B4154FC30BD13F9AADBDA206251032C5E1A8EDA5766887EDBA204C75012CEBD59EB3A2BE016CE5CD8CBA55C9A1D205CED4E53AB0F93F14F8272E6CBC1BD431EDDA2CE178E65D967A381C90268C803EF7E73798A085C7D32E01016E52E38C8E9DA8235EFF97C7F6F1A6EDD064BC74F8BADE6219E181FDAC5A37899ACFE715BAF6ECB9EDB03180C7E3D3872A23667817E8FDC9FC7E0DD4FDC03A280F00D476D6B54F2D500587772E34288E5444BA874A5C5ADB313308EB327E5ECF675FA591DF07B5B208646C831F93D54F54A7EDEA881714E5F0964A945E7A26897F8C3E7B94E5F53FF08C35E72F7BE3070425A98F46940780DF294238E64D1EB49E928F6A7F44545792B041B5A18CB80237B613870C3A6ECDD68B8FF3874B8145AAE3467A5B4EF361C51466E8B5AC2AC6B16FDB6C00113C01CA2742EC4682A9BB192C288FAE9D580752EB92F8F8E4A62D81FF4099F03E3EC80BA590D26D7089A382523B94D74320CEA6A289C01AB88876DE24B42944715204580DFF78CE675AB1776B87C42E143302DADCDB881927CBD56E31F2F6D15FB7C7DC5AB380003CF577A1341CC2A7833550AB151B2FE5B93E49D17B8188648B6A8F9CDB95D5E025C5ED6D2D76546DA74DD3E922E008289D3F62DCCCB5E1FC521BB4EDAF1ABAB2A4DCAAA5DAA1DC7DE263A6CFEB5F6230748F16385A5F13C8D6F6E6F64674C2BC9ABEADA0440A13599A6AFCC74B822365B0E3FBB23690F3BE81B43F0BC1D2C536E755ED0960DFC18DFD2F3E48A27402897E809AE170BA36DEDC9233D6C767362EC6B5BA6228946233469983A08443D82B4C8695A048B476851E577FBD4FCF15A33360DEA36DD6A2C40491EEE6379640DF002FC702083B7D56654773FDE16BC8447E09D8F3F0F6941D28D4E1A81AF83320F96B116CDA9BE81BFD4E05E6A08096B8691D44B5A46C42FD0B3260C061CED1520C915FEA61C99EDC96B9FAB73A2DD53A4AB53C6206439E52FF880A7F302577BE123118BC418843EEA10E5E76A485CF240B3F92318E9F0F59C0E324DE7B80EC2DC970EA8256B796DF56E6B2B67C8D487D78DF3646C596514131932BA0087F9BED5C526F73EDFEE4407664BFF2E409F81FBD7D06ACF29EAA3499C509C38D13DDCAAA14BAB1A699443FE69CADFC7574605E3FE8229F6ED99ECCC347FB40F828D580DC32983AE0F0061DD5F9B96EF02AA441F96CC0A0C84077B29A9EFB83E04757A99F2214EA339FD9802F5FA5FBAFE4BCDEACF3AE66BA047E70EC4C7F0956AD9977A3FCD98512854EF4133054649521E87B66957B17F067CF3D79097837A5CC7203419911C47CD692491951C831FE974B5A8F3D980C62FDB7D7AB06F154C3F72AA3C22986676761678B3A85FD72CAAC5E12E861EB284C7F97E027D4A6371041B12A1AD17CA967BC1BCD4AFB537AEFF75BCDC575F3D99CF4D1639506A55C65672596E255B4F42655148C6673D007AD387B154A1CA348D921EA8546643644FC219D3EE1D688D51A4B04EC7EEDF18CB76B8185E005CBD0D3D6F3B0C9B394A4284BDB8E157F209E318EC4A3DD7ABFB3C5F25DD2F72374DFABC12DEB1C4FEDACEEA5C188A07EF8FF7BC2CE54E2A8EB1D8170B81C1EA26409D5D3A6D3479378051FC365D7660C2167EED603B237824D4169F4659938DC908581F5A75F8312D087AB07DC8DF4BF80DB8004B1F2CC4C19029A9B18928C21EAE31B9CFCC09E860A314CD3EBED408F23C59898995F4CF4A8199659C0E85964E8B5B0051C9D0CCF40826A0C7A776762EB0A14CC90432B84F5A55D74B3C22758CC90B95592A1608CE230B6E2F523BA4E97E813C014555C2CE8BB15ADB912526C9A9E40FF668F53F6DA82AFAFD643E643FFA837F9103206F4AC9A41BD7CFFF87D37DA2EB4BF8BBD03CDBC21B7E40D9B4C2CE12CE8CDA97CAA8BD76E998E4575F99E4993599A309545D66A8EE46E4FD8569D182CDAF47506BFC1F6B10E9554B7FB745237AD35B33D166F464F7478707A66204E77666DE7B021F3BD25591B86A6C17787D060E267B3A6F1A457001A6CA4EB5890DA30BD14C053E16DA32CF84A5A3FDEEB2946B6E99C0893F8B7C6209DBEE408077AACB8F86737351FCEA31F347AED0A536E108455DE3EC4FA2EED48B75762F27D0D41698435CCE1AB03A42D9E9AE4AA200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid1153 putdup 34 /gid9 putdup 35 /gid3 putdup 36 /gid50 putdup 37 /gid83 putdup 38 /gid72 putdup 39 /gid85 putdup 40 /gid68 putdup 41 /gid87 putdup 42 /gid82 putdup 43 /gid44 putdup 44 /gid81 putdup 45 /gid73 putdup 46 /gid80 putdup 47 /gid76 putdup 48 /gid1154 putdup 49 /gid36 putdup 50 /gid54 putdup 51 /gid55 putdup 52 /gid47 putdup 53 /gid86 putreadonly def/$SubFontArray [/AAAAAC+PingFangHK-Regular findfont ] def/CharProcs 23 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid3 {(\001) 0 $SP} putdup /gid9 {(\002) 0 $SP} putdup /gid36 {(\003) 0 $SP} putdup /gid44 {(\004) 0 $SP} putdup /gid47 {(\005) 0 $SP} putdup /gid50 {(\006) 0 $SP} putdup /gid54 {(\007) 0 $SP} putdup /gid55 {(\010) 0 $SP} putdup /gid68 {(\011) 0 $SP} putdup /gid72 {(\012) 0 $SP} putdup /gid73 {(\013) 0 $SP} putdup /gid76 {(\014) 0 $SP} putdup /gid80 {(\015) 0 $SP} putdup /gid81 {(\016) 0 $SP} putdup /gid82 {(\017) 0 $SP} putdup /gid83 {(\020) 0 $SP} putdup /gid85 {(\021) 0 $SP} putdup /gid86 {(\022) 0 $SP} putdup /gid87 {(\023) 0 $SP} putdup /gid1153 {(\024) 0 $SP} putdup /gid1154 {(\025) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 859 98 rc
0 98 m
859 98 l
859 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-836 898 m
1861 898 l
1861 -1058 l
-836 -1058 l
h
-836 898 m
f
9 97 m
263 97 l
267.41827 97 271 93.418282 271 89 c
271 59.5 l
271 55.081722 267.41827 51.5 263 51.5 c
9 51.5 l
4.5817218 51.5 1 55.081722 1 59.5 c
1 89 l
1 93.418282 4.5817218 97 9 97 c
h
9 97 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 166 246 cm
-157 149 m
97 149 l
101.41828 149 105 152.58173 105 157 c
105 186.5 l
105 190.91827 101.41828 194.5 97 194.5 c
-157 194.5 l
-161.41827 194.5 -165 190.91827 -165 186.5 c
-165 157 l
-165 152.58173 -161.41827 149 -157 149 c
h
-157 149 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 136 74.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-65.959999 -5.223999 m
(!"#$%"&'\(\)*+\)#&)[ 12.160000 8.896000 8.592000 8.896000 5.040000 8.896000 13.648000 4.448000 10.368000 5.040000 9.184000 9.184000 5.328000 8.592000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-126.264 15.223999 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-110.264 15.223999 m
(,--.')[ 9.488000 11.552000 11.552000 10.368000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-62.855999 15.223999 m
("#$%&'\(\)*'#+,-*'.\(\)/*,0)[ 11.616000 5.328000 12.272000 9.376000 8.880000 5.840000 8.944000 5.680000 9.376000 5.840000 5.328000 3.792000 8.944000 5.968000 9.376000 5.840000 13.680000 8.944000 5.680000 4.096000 9.376000 8.944000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
289.5 94.5 m
368.25 94.5 l
368.25 54 l
289.5 54 l
h
289.5 94.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 166 246 cm
123.5 151.5 m
202.25 151.5 l
202.25 192 l
123.5 192 l
h
131.375 151.5 m
131.375 192 l
194.375 192 m
194.375 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 328.875 74.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-23.104 5.776001 m
(\(#\)/0\))[ 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 166 246 cm
105 171.75 m
113.6 171.75 l
S
0 i
CM
287.60001 74.25 m
279.60001 77.25 l
279.60001 71.25 l
h
287.60001 74.25 m
f
0 J
0 j
1 0 0 -1 166 246 cm
121.6 171.75 m
113.6 168.75 l
113.6 174.75 l
h
121.6 171.75 m
S
1 1 1 sc
CM
672 94.5 m
858 94.5 l
858 54 l
672 54 l
h
672 94.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 166 246 cm
506 151.5 m
692 151.5 l
692 192 l
506 192 l
h
524.59998 151.5 m
524.59998 192 l
673.40002 192 m
673.40002 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 765 74.25 cm
-68.903999 -3.447998 m
(12/2&"3#%2*$'-4056')[ 10.960000 3.552000 8.000000 3.552000 13.648000 8.896000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 4.448000 11.552000 8.896000 8.592000 8.592000 8.304000 0.000000 ] xS
-26.823999 15 m
(7*8"30)[ 13.936000 9.184000 9.488000 8.896000 3.552000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
201.875 34 m
455.875 34 l
460.29327 34 463.875 30.418278 463.875 26 c
463.875 9 l
463.875 4.5817218 460.29327 1 455.875 1 c
201.875 1 l
197.45673 1 193.875 4.5817218 193.875 9 c
193.875 26 l
193.875 30.418278 197.45673 34 201.875 34 c
h
201.875 34 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 166 246 cm
35.875 212 m
289.875 212 l
294.29327 212 297.875 215.58173 297.875 220 c
297.875 237 l
297.875 241.41827 294.29327 245 289.875 245 c
35.875 245 l
31.456722 245 27.875 241.41827 27.875 237 c
27.875 220 l
27.875 215.58173 31.456722 212 35.875 212 c
h
35.875 212 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 328.875 17.5 cm
-46.368 5.776001 m
(.9052:5#%2*$)[ 10.368000 9.488000 8.592000 8.592000 3.552000 8.288000 8.592000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 166 246 cm
162.875 212 m
162.875 201.89999 l
S
0 i
CM
328.875 52.099998 m
325.875 44.099998 l
331.875 44.099998 l
h
328.875 52.099998 m
f
0 J
0 j
1 0 0 -1 166 246 cm
162.875 193.89999 m
159.875 201.89999 l
165.875 201.89999 l
h
162.875 193.89999 m
S
1 1 1 sc
CM
429.61227 94.5 m
595.6123 94.5 l
595.6123 54 l
429.61227 54 l
h
429.61227 94.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 166 246 cm
263.61227 151.5 m
429.61227 151.5 l
429.61227 192 l
263.61227 192 l
h
280.21228 151.5 m
280.21228 192 l
413.0123 192 m
413.0123 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 512.6123 74.25 cm
-59.863998 -3.447998 m
(9;<.'=0$0\)#%2*$')[ 9.488000 7.424000 9.184000 10.368000 4.448000 12.144000 8.592000 8.896000 8.592000 5.328000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
-26.823999 15 m
(7*8"30)[ 13.936000 9.184000 9.488000 8.896000 3.552000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 166 246 cm
202.25 171.75 m
253.7123 171.75 l
S
0 i
CM
427.71228 74.25 m
419.71228 77.25 l
419.71228 71.25 l
h
427.71228 74.25 m
f
0 J
0 j
1 0 0 -1 166 246 cm
261.71228 171.75 m
253.7123 168.75 l
253.7123 174.75 l
h
261.71228 171.75 m
S
1 1 1 sc
CM
373.73306 90.75 m
414.73306 90.75 l
414.73306 57.75 l
373.73306 57.75 l
h
373.73306 90.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 394.23306 74.25 cm
/F2.1[ 16 0 0 -16 0 0]sf
-15.264 6 m
(123)[ 10.512000 10.112000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 166 246 cm
429.61227 171.75 m
496.10001 171.75 l
S
0 i
CM
670.09998 74.25 m
662.09998 77.25 l
662.09998 71.25 l
h
670.09998 74.25 m
f
0 J
0 j
1 0 0 -1 166 246 cm
504.10001 171.75 m
496.10001 168.75 l
496.10001 174.75 l
h
504.10001 171.75 m
S
1 1 1 sc
CM
600.51758 90.75 m
657.51758 90.75 l
657.51758 57.75 l
600.51758 57.75 l
h
600.51758 90.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 629.01758 74.25 cm
-23.440001 6 m
(%4325)[ 9.376000 9.408000 9.904000 10.112000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
