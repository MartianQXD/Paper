%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 789.000000 135.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 789 135
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 789 135
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /I put
dup 34 /m put
dup 35 /p put
dup 36 /l put
dup 37 /e put
dup 38 /n put
dup 39 /t put
dup 40 /a put
dup 41 /i put
dup 42 /o put
dup 43 /comma put
dup 44 /space put
dup 45 /V put
dup 46 /r put
dup 47 /b put
dup 48 /s put
dup 49 /P put
dup 50 /B put
dup 51 /u put
dup 52 /C put
dup 53 /h put
dup 54 /c put
dup 55 /k put
dup 56 /g put
dup 57 /M put
dup 58 /d put
dup 59 /S put
dup 60 /fi put
dup 61 /L put
dup 62 /T put
dup 63 /G put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








457D691844B8000A2BB800002B000000
00>] def
/CharStrings 33 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/B 3 def
/C 4 def
/G 5 def
/I 6 def
/L 7 def
/M 8 def
/P 9 def
/S 10 def
/T 11 def
/V 12 def
/a 13 def
/b 14 def
/c 15 def
/d 16 def
/e 17 def
/g 18 def
/h 19 def
/i 20 def
/k 21 def
/l 22 def
/m 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/fi 31 def
/uni2B91 32 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9312448060975EE3A7373C3A15976847AEC4213ADF0F8E546DBAEAEDA0492FEE740BA701036C7ADAA121D9C61DA187FF3C7BE4F830B1C5ED214DE2BB5E6884718B3ED5699043FC5FE98B71D5385A818F2704E89E4E3A5BC8490E399F8998A3F5371AF5AE0AF4654B2185506A423E2EE5BF0DA76CF57B4FCF4AB27E5E2EE1C09F7043D0F3012638EFB059AAF3A6739622D8851350298FCE4E66D63AA73BF41C70B2892F3185857BF0D62C87B6FD31BC30278C2AC4244D0FBE72D9FFF1AF68FED311E5CC963273FF6ED4683A86F0FECE435964509F473F303477BC89E1F7BAA367D2CD052294D434C2D813F3725CB09FC9369D549B9D3D3145957A92E1CBA23A640A12D811BE00D74C96B169A36AD98223F64F4CFEAF025519675976C4E8A81A318B028FE80C5EA9416B99B0646D3B3980A3D71AFA6E24E8B740B356356150B24CB966BB8F1E815FA401E43F76E9F2A3A548D9CE4FDA99D3D571FB059D377F28D68AFAA6DF4B6830D6FA218CA401ED74E7AEE4BF444AE835F485B3F8A1D9459CBD20ADFAFB7368B4D0C757C17265E738CFB1A7D932781F4B678B80FD13B0BCA92CB8BFCC6686522AA4F294DEC9BFB668B38AD5D55F77AEC768061FD563BDCA41A75743A514BBC957303D73A2160A6369AB9E52A9CC5D16D17CD8FDF528B102AAB4C50E7B79C43A42A690D2A697E95984EFF0386ECCAB8C277901B4197DAD6508EFF4F1B107359ACC7DDEB21D5E603BBFB3C62D52AC6E6B997EEE94590A32637B8096


F06573B504A7CF4892067E3932832448C8CD4503F229FA7367568AF046B10B12EDEAF77B169D7D67BA6BE9122EC5C9BCA6CEDB3015F8EE4AF9C39B5D79EA0020A13066B247790A3864D65405B09F5833040097520BCA85C0E3417D21874302B3F8AB848FECB9667D391745B7018D84C261C56CCC919C54AB2D2442B42DF39F567F934FC8653955542A6595E729DBBF26F4E715751AEED75DED5B73A0966B33F5F5E1DA6DBF33B33618FA235F205D2E30408BE6DD8919FFE9C8F86C527AD726A0A1B6C3AF3B11DDB8263DFCC399EE9CB8ACCE596AB28F94E4506DABE32EFC79E105CCBF8E6F461B38D13DE66C509A29068832703A3D77B25D312C63CA8F52A2616BC8414D4E4F05B3D21F011FAD179AE154F018D4CDBFE9CD6BDF3FB0926AE79D62DE7636E480AC8D79CDD8C618498A41BD01A48625EC341DEA8416DAFEF3D09EFEFCEC57A878B7855E9F7B288A1456533523FC434195D4A27734883CEFECB2FA62462BCDD101A1BEA09944F1DBA4C389B5E8595130C50F1115760882D4E7372252A6E030DF8BD81F84B7D56D35737CB176DBFF93A05DB3AA718E81B5053E96586F899E64361A24452A511E3167EDFDE351343D74C9AD7EDDC33CEC5813FBCEF970EEA13B674A11E4A9903B9073B371569437EA7CEDB25142106A51D1E1B6FF5B4CA8C04CCFCE72820341778C306F5F0313F3A9060618990939650900A764B409B6626525435DAE2DCFA1D1EA8D4EE31EFCA6B745B771F416A8550371F2346B7DFB32E69232727AE883972AA621DFDE46637C344F3EAD8E6271A6F8F5CFC80E3F26F07E76542A6F02BACEA5398BC2C0BB2F845326D29110C68CF2C351B26752ADF75FE7D337EBC9040D4C353A5F88291019C97F22ADB5977F4F4FCBCEB6772A47B48DBB97962D1A5E05C81E056995BE8A923CDEBDE9C550964114F12B3B7F7116DE70CF94340C1D0FB87086746D3ABA8733C65D67453DCBDD15958666248FC3D5F22BBDD691EC0FDECAF449C5318D4151918C0BF97C418C1605A761B70DD5E5ECFEE01BAF108E915116BD83365EDE87E3EEA42BCF6EB12D72B2D7395F9C27EC3B9492F02589D28F3AF749780062CADC2078C5E6D2CE91DE008F6099C3DD336C467BDD554063A379A921AFBE8A6BB2C8A904A337945034496BB8A4D16B0F36C48150BE0984F1047D1EC0A30B32352E2E6FE232B907AC9E8F16D5805ADA2825E744E8E9977F5C1A1A2D13636516C67146351861B9E91A0396A4AFE814FBE1EBEAAAE3D0B7E59AF478DDBCCAAB7B4F2C02BE00C39038126E1F260D0CCC2C5A3F4DC6A7A05605848CFAC193CE040FC41968DF694C7C353FC1E408B43D130AB3A6A91A7D0209056A0A9CA1C34F9D78FA59B4922B7822EFC844A76CE86BC7F7D7904B28CFFC08F9416C4C5688CAB39F374796B9E724F0297101D85453171342EA713A98
E09E028C35F45F35FE8BC6DF26914BC83598E9A241BCDC9B05B6147616B5D9D23048EAAD01E272D8B99BA8E8382CA359E00F3BAA9716D2C0A940FD1631D39FAD059DDB159B575ADFEFD1DF99C296702D72F2D89678290503642DF8A079DE5361C8FB59E2B35894634C84E4ED70D55B509C6A737D92B6F52C613CC52F137FE3358CE9D6F4BA08E53F73C63F10715304954E96F48451F57CD780F54FA14B96919873B7399DFB4AC56AC44AF456C323AF8CA4C68F4B19E5235EB3E875998EC9373957A91FC1D1F5E03CBA78C69C45CFF86487F262CEB02C4F5D15CA0DE301AD1308ECAD3FEB5EB438FCA69AA52779E9DCB729A59ECE13B423CCB403162B65DE140FE7BA721EC049498D59575CFE43C23EC59434797F0CDE5EBA59B4B9B08829A626282E8D6FECCBCC9CA936D1560D20A671F0882D3986E5158B89E51EF8AE88F7C8BDD35AC3ECE4E2F902EAFAD9F65CCD20C9AE215D71727833FED6B05E9050D1C9F024FBC6F603A967B4A7CAEF6D3275D196D19B275D5D67F50103E6027A0C264799DBDDAEA686E6572E11A42F3429A7EECA41374D3C3270263C72B9ABE88EB96EF5479218AEE72B7D8AE14AC6AD7EEC102A765D55E55814384B5A4A69426A35E78228AB78FAAFF8957CCC585DF12277ABBB84054A955C6C5161BD87671E9A6D2C3F6A002EAEFF04BAA341F4546721303F6C82BD46998220A2539560421894271B6A57A6B42001846B4D7D162F084513E8072855CF6D35DE94E6FDC054625907B4C61CB17034B3F74040AC086446E49720A31BA76498F3DFAF9E53F11E1972A4F45A5B4EB73DDD0BC5AAF04737C7390880F43D49AD4B49D7CFC3DDBEFC5793E7091AD8D8857C9A5348B062BBDC9B255F6B8A589E81F7A3105C1EA2E3A3A57513C443D87EF274784A5F74045A2FA8E3561543AB3BC54F4802C9C5F8F370115E4AD06BF2A8E6325ED128BF3B5E722B744BB10335E14E6AE4F70E04EFBF76B15AE44FC92E0C7D228EDA4D7FDAF4505A24D5EDF2C85B2023A8A9EA35300188DC88B0394301BC4487CFBD1111903CEEA8D439B31FA7BD030C74632ED0D227C7462B3B6B2D2AB2673163148856AE2196C25E3E792B72151E8ABB5B57FC478EC39FBDA74865272685C7ABB911B8AF1748828D323D4D7559776FF46579A7016336C4D917A3696BBD670B48BE4D4D3B3CB8882779778ED188AE4E341419C7FBC23763B9C465FF3DDA59C2516D7058172B9E948E554135407DF86094B95F0607A0DE13976B7176B2BBE6F35D6710958987C5812DA4D7435663CB53106B98AA4E81CD588779ACFE117873561126DEE0CD7CC1D549584ED7CE2926AC9FE83FFBEE08E78955925CF2A2F499389D8F424ECD871A94A4BD9A0E1847582B8B7435A07DAD76576ED0C9E34615DC2208BF8CDB6FE5EBB61112E8DE3856E2E519DCCDAA48A1B87BB2DEBF

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 4/20/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid3 putdup 2 /gid36 putdup 3 /gid39 putdup 4 /gid47 putdup 5 /gid50 putdup 6 /gid54 putdup 7 /gid55 putdup 8 /gid68 putdup 9 /gid72 putdup 10 /gid76 putdup 11 /gid81 putdup 12 /gid82 putdup 13 /gid83 putdup 14 /gid85 putdup 15 /gid86 putdup 16 /gid87 putdup 17 /gid393 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6D97DA4F9D0B7B8E3ED0D6C2A78456C76B9C46E093EBE8A0B6046A77D5C0274440824A9536CC9DFBE621977FF6118320E382965E69C00687C7FB4738515F7314DAEBC519F5E226E40436806FB4EC884B26DC2A082DBDF7E319B6559CBD0A0DF65F2583E192F4342C634649B5227CF5ED8B3916048F87CBBD0B1837BB4D6EB09C5EEC5A0B10143D04244447E5FADB54366868F62D847FEA261ECF26DAA83FD6B9361F34A2FE2AEBD460C2D2374315024D1C6DC48385EFCA29AAAF9AA262CA6BEA55A85EFEB441343EEDF5446247EAC5F7BD48BDBF829F5B9B45D7A672DE87228F02E21EC2DC1240A050B2368C7E923A093EEA490C11518DF8898569FC40CB7665EE9456D7CF83C8E43D85CC2A974C2C8182786A6CF94454E8702BA1AD8986354A4456E21C9E1D6FA71F8A4F040F8B794251369155E1EC879CA6FBD93A3A0089E0BD10E8A9A1557E2E5776D2EC4880AA2E31E05C5669B7ED30FCFA10238AE4E02B46EA491F1B69FE7A12DAF79FFA4EA3371FE4EF8F2518783873F794270C6193E4BF6CA565A2E740B333758E8514D9635052E217F0CEE7F100C1268436B10415FBA477514C98FB7C21C7BD9CDD16680810549C2973E7CC4DCD529AE33CE21B3D1670EFCC89B140EEDE31DECA341F1BB574F93E9C05284CA7020F0322521C7D1E0E88075AC726D1E4B7DF7EF7F8E438A579EBA81C04D61F0461C3D48237CCADB63E0EE3DF5E5899869D9DB77B8366A0BC03BC0C9FB3965E60239B99FE5D16EA1B95E09658BC5946937802F73DF606FD9B5C299B51181605C96BD91C09674D055DE7B70D2BA3ECA74F03FF6673BC89C27B825298F717572AC721B75610DBFE4F111A87F4BB0114639A2C2858C49326939BF12D9ACEA0D9EF7931CBA71B2C3540047D6385C1FCB1238A154F009F3F5EFA200DED282751687B1B3630F4B2A41E8629854C8D0755267B4BE8DC63E0B0C9DDA2B50B75CCACD77746A389058F3E4A6F5A33930A56E9484CCF3B08EF0A7A7C3EFB79B931C97F8B6E10D4870707A35AEF4EB46D0BCAE0DB4D5685A42214C4AA8771D1404671122FA1EB620FAD68DA7DCFCE3DB78FCBC9E3F51FE2CD0EF72BA82EE8E7497F8EDC2AF1F6D59C9A22FA1C4335AA57100C0F43E31381EF8EF33E99AE741D2C31A27A9894668A340767140D932A1974A7EA5DD702B6D06D9A41A5D8FBB489F67626E1BF9BFE06C761398DE41640592900C0A66A54FD105F3CFA8CF8F54E80AAF590A9CBEE8F6B97B344AF319326B8AB0E82D41FC8963B659B1244E3E584E4326446078A6EBA9C16AAA9F77D693DD080B69176DCD3C89374D76DA1237A4F3C7AD1A22F225C44C000BEE5811AA15B37DDA87369EDDC07153D4E91543AABD8E74E684DF1BF0BEE01974470476ACFBCF10D556794F570B547297D9DFBD6C0B0ECD3AAD417795CFF5ECF6E03396234ED81DD7CAD7688E18232487F4B60D8B38776064A8CCD6CE405699251DC4B58735291233D68F60B304D4782262F5E032D1BBE68C2ED409060CEBAF81643443892313C397F0A208E4D618DF19FA6931DF9F393101938AFE5D8A392E8443C97BD1BED6D176BE334470961651DC846F63C2717E2A7BBED0309D280409DD1D7B9D09786B21E199C79528FF54E02AE68D03D0084B2B453DC6ACBBF337CF1DEDAA783B287B646D10D481201D19F2A70D8ED401FF9482516FAE0115B48F9169590F73F6A2DA8E825351870F0666AF1344D3E79820C4D194103C76323898AA15E443CDB7F7A2749DE2ABFF871BE8EDEF7350837DAF4FA7E365296A078A38513CB1591572AA1E741C78E629FAB784FD7E3414FD9D8E283B5F3007031F8D2BA70EB8389638959FD92278899075807CCBCEA31075F56612F1DD12E586C90197AA62460EBB760A9BB1DB3A8A226A8544B90477450C49458246BB3179BE80650F685CD60C0BC09DD770381F7D24C5561F481045B00019E0034B56FD9C96535EC247E4CD5D110A869E0618349D137557C36B84F3EB159A640FB5D19348E59142D1C611E412EA09A4975102C9E0B05DABD51B6AF67B294FE1CF4F6ABF029BD4EFF24941F6FDF8BF2563FF53FE600CCBD372C7BF202B67589BF2819B60B73F3B8A8201BD7FBD956C50766410B98AD845108C96625D12926BD84CE40D54157BA5523454192A7E4CED1AC2C36A00BCDAFF6D49627D6621AF74AA8BA99E7374DC011F274D9F04B114230CC4857416A6308D4A229601DEE00FF8F167815D6B257DA41B547E3E2E07FC8CBB0DD216A7E5B3DE4C9995303D2DE666398C5E90E4F8FE8E7231042133E4531CD6A5CC1EABE2DB44CF44752BB6811BD8F809ECABC9FB5C20D367DF5467927F1482134870E41AE6B28880F9C434DAF46AE70D536CC5B292A563979DF9B00BEA9ED2F13763FCA3FF46262442549085719A4C423CA795846F9EAA5B8ED9D660833975B889E160AA12E197F595CD95CC100575CD74721CA07E8B17CD3247A5C408B78CFB45A9ADF0B8DE27DB52815C686204D6F1C937E871062A8B7BA5B88B80E44EB6F72ED0F745400E87474E1E9C65C16751DD7D4E71B7A70893EA66ACF4797F13F2B84BA4A008D67C5B07B7A40DE35A3267DFAD3B673B3AAC7B89EEEB9E2797FFC7303BCFB6A972690E3BB2617E25EF410FF116DFE4E93B94CABBE87A12FA03F610F4F1D28419E401A1EB31C0C91FE34DCE8A1D2FE409D5C21FE4CBD5795D3F451E039AFB5814DFF0B27F4F8160991CC01C66C73DB463BA7FCD1B57B6C8CBE94F3DC959115EA6D2C20BF960EA3CE14C038FC69D1E998AA3919817531C3D6654FC8EE92DB9ABA4B69EE50FE357FC2D8EDD1759AD27BC75C2EA925F41158912CF735F9FDA3B7A5E70FE1F03E447AAD43156571026118478777C356ABB6F4909688D68198219098923297E90E1F8EC4090D3181270D72175BD2CD4D54BA09CE22BD7CC6A3FC3497968B98533DA9C8683876A87D3F373C3E83526886283CDBE6887DCA8B528870DBA47FEC641120F7EFA7F62DAA6C9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid50 putdup 34 /gid83 putdup 35 /gid72 putdup 36 /gid85 putdup 37 /gid68 putdup 38 /gid87 putdup 39 /gid82 putdup 40 /gid3 putdup 41 /gid39 putdup 42 /gid393 putdup 43 /gid81 putdup 44 /gid76 putdup 45 /gid36 putdup 46 /gid54 putdup 47 /gid55 putdup 48 /gid47 putdup 49 /gid86 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 19 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid3 {(\001) 0 $SP} putdup /gid36 {(\002) 0 $SP} putdup /gid39 {(\003) 0 $SP} putdup /gid47 {(\004) 0 $SP} putdup /gid50 {(\005) 0 $SP} putdup /gid54 {(\006) 0 $SP} putdup /gid55 {(\007) 0 $SP} putdup /gid68 {(\010) 0 $SP} putdup /gid72 {(\011) 0 $SP} putdup /gid76 {(\012) 0 $SP} putdup /gid81 {(\013) 0 $SP} putdup /gid82 {(\014) 0 $SP} putdup /gid83 {(\015) 0 $SP} putdup /gid85 {(\016) 0 $SP} putdup /gid86 {(\017) 0 $SP} putdup /gid87 {(\020) 0 $SP} putdup /gid393 {(\021) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 789 135 rc
0 135 m
789 135 l
789 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-836 927 m
1739 927 l
1739 -1029 l
-836 -1029 l
h
-836 927 m
f
9 133.75 m
159 133.75 l
163.41827 133.75 167 130.16827 167 125.75 c
167 80.75 l
167 76.331718 163.41827 72.75 159 72.75 c
9 72.75 l
4.5817218 72.75 1 76.331718 1 80.75 c
1 125.75 l
1 130.16827 4.5817218 133.75 9 133.75 c
h
9 133.75 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 275 cm
-58 141.25 m
92 141.25 l
96.418282 141.25 100 144.83173 100 149.25 c
100 194.25 l
100 198.66827 96.418282 202.25 92 202.25 c
-58 202.25 l
-62.418278 202.25 -66 198.66827 -66 194.25 c
-66 149.25 l
-66 144.83173 -62.418278 141.25 -58 141.25 c
h
-58 141.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 84 103.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-57.655998 -14.447998 m
(!"#$%"%&'\('\)*&+,)[ 4.144000 13.648000 9.488000 3.552000 8.592000 13.648000 8.592000 8.896000 5.040000 8.592000 5.040000 3.552000 9.184000 8.896000 4.448000 0.000000 ] xS
-74.816002 4 m
(-\(.\)\(/$%,!&\)'\)\($\)0\('\)*&+,)[ 8.896000 8.592000 5.328000 3.552000 8.592000 9.488000 3.552000 8.592000 4.448000 4.144000 8.896000 3.552000 5.040000 3.552000 8.592000 3.552000 3.552000 8.000000 8.592000 5.040000 3.552000 9.184000 8.896000 4.448000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-71.288002 24.447998 m
(!"#$%&'$\(\)#*+,&,'+)[ 12.272000 9.376000 8.880000 5.840000 8.944000 5.680000 9.376000 5.840000 5.328000 11.296000 8.880000 9.728000 8.944000 4.096000 5.680000 4.096000 9.376000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
190.5 123.5 m
269.25 123.5 l
269.25 83 l
190.5 83 l
h
190.5 123.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 275 cm
123.5 151.5 m
202.25 151.5 l
202.25 192 l
123.5 192 l
h
131.375 151.5 m
131.375 192 l
194.375 192 m
194.375 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 229.875 103.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-23.104 5.776001 m
(1\(.0%.)[ 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 67 275 cm
100 171.75 m
113.6 171.75 l
S
0 i
CM
188.60001 103.25 m
180.60001 106.25 l
180.60001 100.25 l
h
188.60001 103.25 m
f
0 J
0 j
1 0 0 -1 67 275 cm
121.6 171.75 m
113.6 168.75 l
113.6 174.75 l
h
121.6 171.75 m
S
1 1 1 sc
CM
573 123.5 m
788.5 123.5 l
788.5 83 l
573 83 l
h
573 123.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 275 cm
506 151.5 m
721.5 151.5 l
721.5 192 l
506 192 l
h
527.54999 151.5 m
527.54999 192 l
699.95001 192 m
699.95001 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 680.75 103.25 cm
-79.720001 -3.447998 m
(2\)0\)"3$\('\)*&,45%67\)&8,)[ 10.960000 3.552000 8.000000 3.552000 13.648000 8.896000 3.552000 8.592000 5.040000 3.552000 9.184000 8.896000 4.448000 11.552000 8.896000 8.592000 8.592000 8.304000 3.552000 8.896000 9.184000 0.000000 ] xS
-26.823999 15 m
(9*:3$%)[ 13.936000 9.184000 9.488000 8.896000 3.552000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
159 62 m
304.875 62 l
309.29327 62 312.875 58.418278 312.875 54 c
312.875 9 l
312.875 4.5817218 309.29327 1 304.875 1 c
159 1 l
154.58173 1 151 4.5817218 151 9 c
151 54 l
151 58.418278 154.58173 62 159 62 c
h
159 62 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 67 275 cm
92 213 m
237.875 213 l
242.29327 213 245.875 216.58173 245.875 221 c
245.875 266 l
245.875 270.41827 242.29327 274 237.875 274 c
92 274 l
87.581718 274 84 270.41827 84 266 c
84 221 l
84 216.58173 87.581718 213 92 213 c
h
92 213 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 231.9375 31.5 cm
-48.591999 -14.447998 m
(;#%6\)<6\('\)*&+)[ 10.368000 9.488000 8.592000 8.592000 3.552000 8.288000 8.592000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
-74.816002 4 m
(-\(.\)\(/$%,!&\)'\)\($\)0\('\)*&+,)[ 8.896000 8.592000 5.328000 3.552000 8.592000 9.488000 3.552000 8.592000 4.448000 4.144000 8.896000 3.552000 5.040000 3.552000 8.592000 3.552000 3.552000 8.000000 8.592000 5.040000 3.552000 9.184000 8.896000 4.448000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-71.288002 24.447998 m
(!"#$%&'$\(\)#*+,&,'+)[ 12.272000 9.376000 8.880000 5.840000 8.944000 5.680000 9.376000 5.840000 5.328000 11.296000 8.880000 9.728000 8.944000 4.096000 5.680000 4.096000 9.376000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 67 275 cm
164.06076 213 m
163.74156 201.89592 l
S
0 i
CM
230.51169 81.100784 m
227.7428 73.017883 l
233.74033 73.190292 l
h
230.51169 81.100784 m
f
0 J
0 j
1 0 0 -1 67 275 cm
163.51169 193.89922 m
160.7428 201.98212 l
166.74033 201.80971 l
h
163.51169 193.89922 m
S
1 1 1 sc
CM
330.61227 123.5 m
496.61227 123.5 l
496.61227 83 l
330.61227 83 l
h
330.61227 123.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 67 275 cm
263.61227 151.5 m
429.61227 151.5 l
429.61227 192 l
263.61227 192 l
h
280.21228 151.5 m
280.21228 192 l
413.0123 192 m
413.0123 151.5 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 413.61227 103.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-59.863998 -3.447998 m
(#=>;,?%&%.\('\)*&,)[ 9.488000 7.424000 9.184000 10.368000 4.448000 12.144000 8.592000 8.896000 8.592000 5.328000 8.592000 5.040000 3.552000 9.184000 8.896000 0.000000 ] xS
-26.823999 15 m
(9*:3$%)[ 13.936000 9.184000 9.488000 8.896000 3.552000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 67 275 cm
202.25 171.75 m
253.7123 171.75 l
S
0 i
CM
328.71228 103.25 m
320.71228 106.25 l
320.71228 100.25 l
h
328.71228 103.25 m
f
0 J
0 j
1 0 0 -1 67 275 cm
261.71228 171.75 m
253.7123 168.75 l
253.7123 174.75 l
h
261.71228 171.75 m
S
1 1 1 sc
CM
274.73306 119.75 m
315.73306 119.75 l
315.73306 86.75 l
274.73306 86.75 l
h
274.73306 119.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 295.23306 103.25 cm
/F2.1[ 16 0 0 -16 0 0]sf
-15.264 6 m
(-./)[ 10.512000 10.112000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 67 275 cm
429.61227 171.75 m
496.10001 171.75 l
S
0 i
CM
571.09998 103.25 m
563.09998 106.25 l
563.09998 100.25 l
h
571.09998 103.25 m
f
0 J
0 j
1 0 0 -1 67 275 cm
504.10001 171.75 m
496.10001 168.75 l
496.10001 174.75 l
h
504.10001 171.75 m
S
1 1 1 sc
CM
501.51758 119.75 m
558.51758 119.75 l
558.51758 86.75 l
501.51758 86.75 l
h
501.51758 119.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 530.01758 103.25 cm
-23.440001 6 m
("0/.1)[ 9.376000 9.408000 9.904000 10.112000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
